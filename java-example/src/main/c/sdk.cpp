/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */


#ifndef SWIGJAVA
#define SWIGJAVA
#endif



#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


/* Fix for jlong on some versions of gcc on Windows */
#if defined(__GNUC__) && !defined(__INTEL_COMPILER)
  typedef long long __int64;
#endif

/* Fix for jlong on 64-bit x86 Solaris */
#if defined(__x86_64)
# ifdef _LP64
#   undef _LP64
# endif
#endif

#include <jni.h>
#include <stdlib.h>
#include <string.h>


/* Support for throwing Java exceptions */
typedef enum {
  SWIG_JavaOutOfMemoryError = 1,
  SWIG_JavaIOException,
  SWIG_JavaRuntimeException,
  SWIG_JavaIndexOutOfBoundsException,
  SWIG_JavaArithmeticException,
  SWIG_JavaIllegalArgumentException,
  SWIG_JavaNullPointerException,
  SWIG_JavaDirectorPureVirtual,
  SWIG_JavaUnknownError,
  SWIG_JavaIllegalStateException,
} SWIG_JavaExceptionCodes;

typedef struct {
  SWIG_JavaExceptionCodes code;
  const char *java_exception;
} SWIG_JavaExceptions_t;


static void SWIGUNUSED SWIG_JavaThrowException(JNIEnv *jenv, SWIG_JavaExceptionCodes code, const char *msg) {
  jclass excep;
  static const SWIG_JavaExceptions_t java_exceptions[] = {
    { SWIG_JavaOutOfMemoryError, "java/lang/OutOfMemoryError" },
    { SWIG_JavaIOException, "java/io/IOException" },
    { SWIG_JavaRuntimeException, "java/lang/RuntimeException" },
    { SWIG_JavaIndexOutOfBoundsException, "java/lang/IndexOutOfBoundsException" },
    { SWIG_JavaArithmeticException, "java/lang/ArithmeticException" },
    { SWIG_JavaIllegalArgumentException, "java/lang/IllegalArgumentException" },
    { SWIG_JavaNullPointerException, "java/lang/NullPointerException" },
    { SWIG_JavaDirectorPureVirtual, "java/lang/RuntimeException" },
    { SWIG_JavaUnknownError,  "java/lang/UnknownError" },
    { SWIG_JavaIllegalStateException, "java/lang/IllegalStateException" },
    { (SWIG_JavaExceptionCodes)0,  "java/lang/UnknownError" }
  };
  const SWIG_JavaExceptions_t *except_ptr = java_exceptions;

  while (except_ptr->code != code && except_ptr->code)
    except_ptr++;

  jenv->ExceptionClear();
  excep = jenv->FindClass(except_ptr->java_exception);
  if (excep)
    jenv->ThrowNew(excep, msg);
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) if (!(expr)) {SWIG_JavaThrowException(jenv, SWIG_JavaIllegalArgumentException, msg); return nullreturn; } else


extern "C" {
#include "../../../../ferment-example/target/example.h"
}
#include "dpp.h"
#include <stdlib.h>


#include <stdint.h>		// Use the C99 official header


#if defined(SWIG_NOINCLUDE) || defined(SWIG_NOARRAYS)


static int SWIG_JavaArrayInBool (JNIEnv *jenv, jboolean **jarr, bool **carr, jbooleanArray input);
static void SWIG_JavaArrayArgoutBool (JNIEnv *jenv, jboolean *jarr, bool *carr, jbooleanArray input);
static jbooleanArray SWIG_JavaArrayOutBool (JNIEnv *jenv, bool *result, jsize sz);


static int SWIG_JavaArrayInSchar (JNIEnv *jenv, jbyte **jarr, signed char **carr, jbyteArray input);
static void SWIG_JavaArrayArgoutSchar (JNIEnv *jenv, jbyte *jarr, signed char *carr, jbyteArray input);
static jbyteArray SWIG_JavaArrayOutSchar (JNIEnv *jenv, signed char *result, jsize sz);


static int SWIG_JavaArrayInUchar (JNIEnv *jenv, jshort **jarr, unsigned char **carr, jshortArray input);
static void SWIG_JavaArrayArgoutUchar (JNIEnv *jenv, jshort *jarr, unsigned char *carr, jshortArray input);
static jshortArray SWIG_JavaArrayOutUchar (JNIEnv *jenv, unsigned char *result, jsize sz);


static int SWIG_JavaArrayInShort (JNIEnv *jenv, jshort **jarr, short **carr, jshortArray input);
static void SWIG_JavaArrayArgoutShort (JNIEnv *jenv, jshort *jarr, short *carr, jshortArray input);
static jshortArray SWIG_JavaArrayOutShort (JNIEnv *jenv, short *result, jsize sz);


static int SWIG_JavaArrayInUshort (JNIEnv *jenv, jint **jarr, unsigned short **carr, jintArray input);
static void SWIG_JavaArrayArgoutUshort (JNIEnv *jenv, jint *jarr, unsigned short *carr, jintArray input);
static jintArray SWIG_JavaArrayOutUshort (JNIEnv *jenv, unsigned short *result, jsize sz);


static int SWIG_JavaArrayInInt (JNIEnv *jenv, jint **jarr, int **carr, jintArray input);
static void SWIG_JavaArrayArgoutInt (JNIEnv *jenv, jint *jarr, int *carr, jintArray input);
static jintArray SWIG_JavaArrayOutInt (JNIEnv *jenv, int *result, jsize sz);


static int SWIG_JavaArrayInUint (JNIEnv *jenv, jlong **jarr, unsigned int **carr, jlongArray input);
static void SWIG_JavaArrayArgoutUint (JNIEnv *jenv, jlong *jarr, unsigned int *carr, jlongArray input);
static jlongArray SWIG_JavaArrayOutUint (JNIEnv *jenv, unsigned int *result, jsize sz);


static int SWIG_JavaArrayInLong (JNIEnv *jenv, jint **jarr, long **carr, jintArray input);
static void SWIG_JavaArrayArgoutLong (JNIEnv *jenv, jint *jarr, long *carr, jintArray input);
static jintArray SWIG_JavaArrayOutLong (JNIEnv *jenv, long *result, jsize sz);


static int SWIG_JavaArrayInUlong (JNIEnv *jenv, jlong **jarr, unsigned long **carr, jlongArray input);
static void SWIG_JavaArrayArgoutUlong (JNIEnv *jenv, jlong *jarr, unsigned long *carr, jlongArray input);
static jlongArray SWIG_JavaArrayOutUlong (JNIEnv *jenv, unsigned long *result, jsize sz);


static int SWIG_JavaArrayInLonglong (JNIEnv *jenv, jlong **jarr, jlong **carr, jlongArray input);
static void SWIG_JavaArrayArgoutLonglong (JNIEnv *jenv, jlong *jarr, jlong *carr, jlongArray input);
static jlongArray SWIG_JavaArrayOutLonglong (JNIEnv *jenv, jlong *result, jsize sz);


static int SWIG_JavaArrayInFloat (JNIEnv *jenv, jfloat **jarr, float **carr, jfloatArray input);
static void SWIG_JavaArrayArgoutFloat (JNIEnv *jenv, jfloat *jarr, float *carr, jfloatArray input);
static jfloatArray SWIG_JavaArrayOutFloat (JNIEnv *jenv, float *result, jsize sz);


static int SWIG_JavaArrayInDouble (JNIEnv *jenv, jdouble **jarr, double **carr, jdoubleArray input);
static void SWIG_JavaArrayArgoutDouble (JNIEnv *jenv, jdouble *jarr, double *carr, jdoubleArray input);
static jdoubleArray SWIG_JavaArrayOutDouble (JNIEnv *jenv, double *result, jsize sz);


#else


/* bool[] support */
static int SWIG_JavaArrayInBool (JNIEnv *jenv, jboolean **jarr, bool **carr, jbooleanArray input) {
  int i;
  jsize sz;
  if (!input) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null array");
    return 0;
  }
  sz = jenv->GetArrayLength(input);
  *jarr = jenv->GetBooleanArrayElements(input, 0);
  if (!*jarr)
    return 0; 
  *carr = new bool[sz]; 
  if (!*carr) {
    SWIG_JavaThrowException(jenv, SWIG_JavaOutOfMemoryError, "array memory allocation failed");
    return 0;
  }
  for (i=0; i<sz; i++)
    (*carr)[i] = ((*jarr)[i] != 0);
  return 1;
}

static void SWIG_JavaArrayArgoutBool (JNIEnv *jenv, jboolean *jarr, bool *carr, jbooleanArray input) {
  int i;
  jsize sz = jenv->GetArrayLength(input);
  for (i=0; i<sz; i++)
    jarr[i] = (jboolean)carr[i];
  jenv->ReleaseBooleanArrayElements(input, jarr, 0);
}

static jbooleanArray SWIG_JavaArrayOutBool (JNIEnv *jenv, bool *result, jsize sz) {
  jboolean *arr;
  int i;
  jbooleanArray jresult = jenv->NewBooleanArray(sz);
  if (!jresult)
    return NULL;
  arr = jenv->GetBooleanArrayElements(jresult, 0);
  if (!arr)
    return NULL;
  for (i=0; i<sz; i++)
    arr[i] = (jboolean)result[i];
  jenv->ReleaseBooleanArrayElements(jresult, arr, 0);
  return jresult;
}


/* signed char[] support */
static int SWIG_JavaArrayInSchar (JNIEnv *jenv, jbyte **jarr, signed char **carr, jbyteArray input) {
  int i;
  jsize sz;
  if (!input) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null array");
    return 0;
  }
  sz = jenv->GetArrayLength(input);
  *jarr = jenv->GetByteArrayElements(input, 0);
  if (!*jarr)
    return 0; 
  *carr = new signed char[sz]; 
  if (!*carr) {
    SWIG_JavaThrowException(jenv, SWIG_JavaOutOfMemoryError, "array memory allocation failed");
    return 0;
  }
  for (i=0; i<sz; i++)
    (*carr)[i] = (signed char)(*jarr)[i];
  return 1;
}

static void SWIG_JavaArrayArgoutSchar (JNIEnv *jenv, jbyte *jarr, signed char *carr, jbyteArray input) {
  int i;
  jsize sz = jenv->GetArrayLength(input);
  for (i=0; i<sz; i++)
    jarr[i] = (jbyte)carr[i];
  jenv->ReleaseByteArrayElements(input, jarr, 0);
}

static jbyteArray SWIG_JavaArrayOutSchar (JNIEnv *jenv, signed char *result, jsize sz) {
  jbyte *arr;
  int i;
  jbyteArray jresult = jenv->NewByteArray(sz);
  if (!jresult)
    return NULL;
  arr = jenv->GetByteArrayElements(jresult, 0);
  if (!arr)
    return NULL;
  for (i=0; i<sz; i++)
    arr[i] = (jbyte)result[i];
  jenv->ReleaseByteArrayElements(jresult, arr, 0);
  return jresult;
}


/* unsigned char[] support */
static int SWIG_JavaArrayInUchar (JNIEnv *jenv, jshort **jarr, unsigned char **carr, jshortArray input) {
  int i;
  jsize sz;
  if (!input) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null array");
    return 0;
  }
  sz = jenv->GetArrayLength(input);
  *jarr = jenv->GetShortArrayElements(input, 0);
  if (!*jarr)
    return 0; 
  *carr = new unsigned char[sz]; 
  if (!*carr) {
    SWIG_JavaThrowException(jenv, SWIG_JavaOutOfMemoryError, "array memory allocation failed");
    return 0;
  }
  for (i=0; i<sz; i++)
    (*carr)[i] = (unsigned char)(*jarr)[i];
  return 1;
}

static void SWIG_JavaArrayArgoutUchar (JNIEnv *jenv, jshort *jarr, unsigned char *carr, jshortArray input) {
  int i;
  jsize sz = jenv->GetArrayLength(input);
  for (i=0; i<sz; i++)
    jarr[i] = (jshort)carr[i];
  jenv->ReleaseShortArrayElements(input, jarr, 0);
}

static jshortArray SWIG_JavaArrayOutUchar (JNIEnv *jenv, unsigned char *result, jsize sz) {
  jshort *arr;
  int i;
  jshortArray jresult = jenv->NewShortArray(sz);
  if (!jresult)
    return NULL;
  arr = jenv->GetShortArrayElements(jresult, 0);
  if (!arr)
    return NULL;
  for (i=0; i<sz; i++)
    arr[i] = (jshort)result[i];
  jenv->ReleaseShortArrayElements(jresult, arr, 0);
  return jresult;
}


/* short[] support */
static int SWIG_JavaArrayInShort (JNIEnv *jenv, jshort **jarr, short **carr, jshortArray input) {
  int i;
  jsize sz;
  if (!input) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null array");
    return 0;
  }
  sz = jenv->GetArrayLength(input);
  *jarr = jenv->GetShortArrayElements(input, 0);
  if (!*jarr)
    return 0; 
  *carr = new short[sz]; 
  if (!*carr) {
    SWIG_JavaThrowException(jenv, SWIG_JavaOutOfMemoryError, "array memory allocation failed");
    return 0;
  }
  for (i=0; i<sz; i++)
    (*carr)[i] = (short)(*jarr)[i];
  return 1;
}

static void SWIG_JavaArrayArgoutShort (JNIEnv *jenv, jshort *jarr, short *carr, jshortArray input) {
  int i;
  jsize sz = jenv->GetArrayLength(input);
  for (i=0; i<sz; i++)
    jarr[i] = (jshort)carr[i];
  jenv->ReleaseShortArrayElements(input, jarr, 0);
}

static jshortArray SWIG_JavaArrayOutShort (JNIEnv *jenv, short *result, jsize sz) {
  jshort *arr;
  int i;
  jshortArray jresult = jenv->NewShortArray(sz);
  if (!jresult)
    return NULL;
  arr = jenv->GetShortArrayElements(jresult, 0);
  if (!arr)
    return NULL;
  for (i=0; i<sz; i++)
    arr[i] = (jshort)result[i];
  jenv->ReleaseShortArrayElements(jresult, arr, 0);
  return jresult;
}


/* unsigned short[] support */
static int SWIG_JavaArrayInUshort (JNIEnv *jenv, jint **jarr, unsigned short **carr, jintArray input) {
  int i;
  jsize sz;
  if (!input) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null array");
    return 0;
  }
  sz = jenv->GetArrayLength(input);
  *jarr = jenv->GetIntArrayElements(input, 0);
  if (!*jarr)
    return 0; 
  *carr = new unsigned short[sz]; 
  if (!*carr) {
    SWIG_JavaThrowException(jenv, SWIG_JavaOutOfMemoryError, "array memory allocation failed");
    return 0;
  }
  for (i=0; i<sz; i++)
    (*carr)[i] = (unsigned short)(*jarr)[i];
  return 1;
}

static void SWIG_JavaArrayArgoutUshort (JNIEnv *jenv, jint *jarr, unsigned short *carr, jintArray input) {
  int i;
  jsize sz = jenv->GetArrayLength(input);
  for (i=0; i<sz; i++)
    jarr[i] = (jint)carr[i];
  jenv->ReleaseIntArrayElements(input, jarr, 0);
}

static jintArray SWIG_JavaArrayOutUshort (JNIEnv *jenv, unsigned short *result, jsize sz) {
  jint *arr;
  int i;
  jintArray jresult = jenv->NewIntArray(sz);
  if (!jresult)
    return NULL;
  arr = jenv->GetIntArrayElements(jresult, 0);
  if (!arr)
    return NULL;
  for (i=0; i<sz; i++)
    arr[i] = (jint)result[i];
  jenv->ReleaseIntArrayElements(jresult, arr, 0);
  return jresult;
}


/* int[] support */
static int SWIG_JavaArrayInInt (JNIEnv *jenv, jint **jarr, int **carr, jintArray input) {
  int i;
  jsize sz;
  if (!input) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null array");
    return 0;
  }
  sz = jenv->GetArrayLength(input);
  *jarr = jenv->GetIntArrayElements(input, 0);
  if (!*jarr)
    return 0; 
  *carr = new int[sz]; 
  if (!*carr) {
    SWIG_JavaThrowException(jenv, SWIG_JavaOutOfMemoryError, "array memory allocation failed");
    return 0;
  }
  for (i=0; i<sz; i++)
    (*carr)[i] = (int)(*jarr)[i];
  return 1;
}

static void SWIG_JavaArrayArgoutInt (JNIEnv *jenv, jint *jarr, int *carr, jintArray input) {
  int i;
  jsize sz = jenv->GetArrayLength(input);
  for (i=0; i<sz; i++)
    jarr[i] = (jint)carr[i];
  jenv->ReleaseIntArrayElements(input, jarr, 0);
}

static jintArray SWIG_JavaArrayOutInt (JNIEnv *jenv, int *result, jsize sz) {
  jint *arr;
  int i;
  jintArray jresult = jenv->NewIntArray(sz);
  if (!jresult)
    return NULL;
  arr = jenv->GetIntArrayElements(jresult, 0);
  if (!arr)
    return NULL;
  for (i=0; i<sz; i++)
    arr[i] = (jint)result[i];
  jenv->ReleaseIntArrayElements(jresult, arr, 0);
  return jresult;
}


/* unsigned int[] support */
static int SWIG_JavaArrayInUint (JNIEnv *jenv, jlong **jarr, unsigned int **carr, jlongArray input) {
  int i;
  jsize sz;
  if (!input) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null array");
    return 0;
  }
  sz = jenv->GetArrayLength(input);
  *jarr = jenv->GetLongArrayElements(input, 0);
  if (!*jarr)
    return 0; 
  *carr = new unsigned int[sz]; 
  if (!*carr) {
    SWIG_JavaThrowException(jenv, SWIG_JavaOutOfMemoryError, "array memory allocation failed");
    return 0;
  }
  for (i=0; i<sz; i++)
    (*carr)[i] = (unsigned int)(*jarr)[i];
  return 1;
}

static void SWIG_JavaArrayArgoutUint (JNIEnv *jenv, jlong *jarr, unsigned int *carr, jlongArray input) {
  int i;
  jsize sz = jenv->GetArrayLength(input);
  for (i=0; i<sz; i++)
    jarr[i] = (jlong)carr[i];
  jenv->ReleaseLongArrayElements(input, jarr, 0);
}

static jlongArray SWIG_JavaArrayOutUint (JNIEnv *jenv, unsigned int *result, jsize sz) {
  jlong *arr;
  int i;
  jlongArray jresult = jenv->NewLongArray(sz);
  if (!jresult)
    return NULL;
  arr = jenv->GetLongArrayElements(jresult, 0);
  if (!arr)
    return NULL;
  for (i=0; i<sz; i++)
    arr[i] = (jlong)result[i];
  jenv->ReleaseLongArrayElements(jresult, arr, 0);
  return jresult;
}


/* long[] support */
static int SWIG_JavaArrayInLong (JNIEnv *jenv, jint **jarr, long **carr, jintArray input) {
  int i;
  jsize sz;
  if (!input) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null array");
    return 0;
  }
  sz = jenv->GetArrayLength(input);
  *jarr = jenv->GetIntArrayElements(input, 0);
  if (!*jarr)
    return 0; 
  *carr = new long[sz]; 
  if (!*carr) {
    SWIG_JavaThrowException(jenv, SWIG_JavaOutOfMemoryError, "array memory allocation failed");
    return 0;
  }
  for (i=0; i<sz; i++)
    (*carr)[i] = (long)(*jarr)[i];
  return 1;
}

static void SWIG_JavaArrayArgoutLong (JNIEnv *jenv, jint *jarr, long *carr, jintArray input) {
  int i;
  jsize sz = jenv->GetArrayLength(input);
  for (i=0; i<sz; i++)
    jarr[i] = (jint)carr[i];
  jenv->ReleaseIntArrayElements(input, jarr, 0);
}

static jintArray SWIG_JavaArrayOutLong (JNIEnv *jenv, long *result, jsize sz) {
  jint *arr;
  int i;
  jintArray jresult = jenv->NewIntArray(sz);
  if (!jresult)
    return NULL;
  arr = jenv->GetIntArrayElements(jresult, 0);
  if (!arr)
    return NULL;
  for (i=0; i<sz; i++)
    arr[i] = (jint)result[i];
  jenv->ReleaseIntArrayElements(jresult, arr, 0);
  return jresult;
}


/* unsigned long[] support */
static int SWIG_JavaArrayInUlong (JNIEnv *jenv, jlong **jarr, unsigned long **carr, jlongArray input) {
  int i;
  jsize sz;
  if (!input) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null array");
    return 0;
  }
  sz = jenv->GetArrayLength(input);
  *jarr = jenv->GetLongArrayElements(input, 0);
  if (!*jarr)
    return 0; 
  *carr = new unsigned long[sz]; 
  if (!*carr) {
    SWIG_JavaThrowException(jenv, SWIG_JavaOutOfMemoryError, "array memory allocation failed");
    return 0;
  }
  for (i=0; i<sz; i++)
    (*carr)[i] = (unsigned long)(*jarr)[i];
  return 1;
}

static void SWIG_JavaArrayArgoutUlong (JNIEnv *jenv, jlong *jarr, unsigned long *carr, jlongArray input) {
  int i;
  jsize sz = jenv->GetArrayLength(input);
  for (i=0; i<sz; i++)
    jarr[i] = (jlong)carr[i];
  jenv->ReleaseLongArrayElements(input, jarr, 0);
}

static jlongArray SWIG_JavaArrayOutUlong (JNIEnv *jenv, unsigned long *result, jsize sz) {
  jlong *arr;
  int i;
  jlongArray jresult = jenv->NewLongArray(sz);
  if (!jresult)
    return NULL;
  arr = jenv->GetLongArrayElements(jresult, 0);
  if (!arr)
    return NULL;
  for (i=0; i<sz; i++)
    arr[i] = (jlong)result[i];
  jenv->ReleaseLongArrayElements(jresult, arr, 0);
  return jresult;
}


/* jlong[] support */
static int SWIG_JavaArrayInLonglong (JNIEnv *jenv, jlong **jarr, jlong **carr, jlongArray input) {
  int i;
  jsize sz;
  if (!input) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null array");
    return 0;
  }
  sz = jenv->GetArrayLength(input);
  *jarr = jenv->GetLongArrayElements(input, 0);
  if (!*jarr)
    return 0; 
  *carr = new jlong[sz]; 
  if (!*carr) {
    SWIG_JavaThrowException(jenv, SWIG_JavaOutOfMemoryError, "array memory allocation failed");
    return 0;
  }
  for (i=0; i<sz; i++)
    (*carr)[i] = (jlong)(*jarr)[i];
  return 1;
}

static void SWIG_JavaArrayArgoutLonglong (JNIEnv *jenv, jlong *jarr, jlong *carr, jlongArray input) {
  int i;
  jsize sz = jenv->GetArrayLength(input);
  for (i=0; i<sz; i++)
    jarr[i] = (jlong)carr[i];
  jenv->ReleaseLongArrayElements(input, jarr, 0);
}

static jlongArray SWIG_JavaArrayOutLonglong (JNIEnv *jenv, jlong *result, jsize sz) {
  jlong *arr;
  int i;
  jlongArray jresult = jenv->NewLongArray(sz);
  if (!jresult)
    return NULL;
  arr = jenv->GetLongArrayElements(jresult, 0);
  if (!arr)
    return NULL;
  for (i=0; i<sz; i++)
    arr[i] = (jlong)result[i];
  jenv->ReleaseLongArrayElements(jresult, arr, 0);
  return jresult;
}


/* float[] support */
static int SWIG_JavaArrayInFloat (JNIEnv *jenv, jfloat **jarr, float **carr, jfloatArray input) {
  int i;
  jsize sz;
  if (!input) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null array");
    return 0;
  }
  sz = jenv->GetArrayLength(input);
  *jarr = jenv->GetFloatArrayElements(input, 0);
  if (!*jarr)
    return 0; 
  *carr = new float[sz]; 
  if (!*carr) {
    SWIG_JavaThrowException(jenv, SWIG_JavaOutOfMemoryError, "array memory allocation failed");
    return 0;
  }
  for (i=0; i<sz; i++)
    (*carr)[i] = (float)(*jarr)[i];
  return 1;
}

static void SWIG_JavaArrayArgoutFloat (JNIEnv *jenv, jfloat *jarr, float *carr, jfloatArray input) {
  int i;
  jsize sz = jenv->GetArrayLength(input);
  for (i=0; i<sz; i++)
    jarr[i] = (jfloat)carr[i];
  jenv->ReleaseFloatArrayElements(input, jarr, 0);
}

static jfloatArray SWIG_JavaArrayOutFloat (JNIEnv *jenv, float *result, jsize sz) {
  jfloat *arr;
  int i;
  jfloatArray jresult = jenv->NewFloatArray(sz);
  if (!jresult)
    return NULL;
  arr = jenv->GetFloatArrayElements(jresult, 0);
  if (!arr)
    return NULL;
  for (i=0; i<sz; i++)
    arr[i] = (jfloat)result[i];
  jenv->ReleaseFloatArrayElements(jresult, arr, 0);
  return jresult;
}


/* double[] support */
static int SWIG_JavaArrayInDouble (JNIEnv *jenv, jdouble **jarr, double **carr, jdoubleArray input) {
  int i;
  jsize sz;
  if (!input) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null array");
    return 0;
  }
  sz = jenv->GetArrayLength(input);
  *jarr = jenv->GetDoubleArrayElements(input, 0);
  if (!*jarr)
    return 0; 
  *carr = new double[sz]; 
  if (!*carr) {
    SWIG_JavaThrowException(jenv, SWIG_JavaOutOfMemoryError, "array memory allocation failed");
    return 0;
  }
  for (i=0; i<sz; i++)
    (*carr)[i] = (double)(*jarr)[i];
  return 1;
}

static void SWIG_JavaArrayArgoutDouble (JNIEnv *jenv, jdouble *jarr, double *carr, jdoubleArray input) {
  int i;
  jsize sz = jenv->GetArrayLength(input);
  for (i=0; i<sz; i++)
    jarr[i] = (jdouble)carr[i];
  jenv->ReleaseDoubleArrayElements(input, jarr, 0);
}

static jdoubleArray SWIG_JavaArrayOutDouble (JNIEnv *jenv, double *result, jsize sz) {
  jdouble *arr;
  int i;
  jdoubleArray jresult = jenv->NewDoubleArray(sz);
  if (!jresult)
    return NULL;
  arr = jenv->GetDoubleArrayElements(jresult, 0);
  if (!arr)
    return NULL;
  for (i=0; i<sz; i++)
    arr[i] = (jdouble)result[i];
  jenv->ReleaseDoubleArrayElements(jresult, arr, 0);
  return jresult;
}


#endif

SWIGINTERN IdentifierBytes32_FFI *new_IdentifierBytes32_FFI(uint8_t identifierBytes[32]){
        struct IdentifierBytes32_FFI * identifierBytes32 = (struct IdentifierBytes32_FFI*)calloc(1, sizeof(struct IdentifierBytes32_FFI));
        identifierBytes32->_0 = (uint8_t (*)[32])calloc(1, sizeof(uint8_t[32]));
        memcpy(identifierBytes32->_0, identifierBytes, sizeof(uint8_t[32]));
        return identifierBytes32;
    }
SWIGINTERN void delete_IdentifierBytes32_FFI(IdentifierBytes32_FFI *self){
        free(self->_0); // Deallocate the memory when the object is destroyed
        free(self);
    }
SWIGINTERN enum Purpose_FFI IdentityPublicKeyV0_FFI_getPurpose(IdentityPublicKeyV0_FFI *self){
        return *self->purpose;
    }
SWIGINTERN void IdentityPublicKeyV0_FFI_setPurpose(IdentityPublicKeyV0_FFI *self,enum Purpose_FFI purpose){

    }
SWIGINTERN IdentityPublicKeyV0_FFI *IdentityV0_FFI_getPublicKey(IdentityV0_FFI *self,uint32_t index){
        return self->public_keys->values[index]->v0;
    }
SWIGINTERN IdentityPublicKeyV0_FFI *IdentityV0_FFI_getPublicKeyById(IdentityV0_FFI *self,uint32_t id){
        for (int i = 0; i < self->public_keys->count; ++i) {
            if (self->public_keys->keys[i]->_0 == id)
                return self->public_keys->values[i]->v0;
        }
        return NULL;
    }

#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT jint JNICALL Java_org_dash_sdk_exampleJNI_DevnetType_1FFI_1JackDaniels_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  DevnetType_FFI result;
  
  (void)jenv;
  (void)jcls;
  result = (DevnetType_FFI)DevnetType_FFI_JackDaniels;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_dash_sdk_exampleJNI_DevnetType_1FFI_1Devnet333_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  DevnetType_FFI result;
  
  (void)jenv;
  (void)jcls;
  result = (DevnetType_FFI)DevnetType_FFI_Devnet333;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_dash_sdk_exampleJNI_DevnetType_1FFI_1Chacha_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  DevnetType_FFI result;
  
  (void)jenv;
  (void)jcls;
  result = (DevnetType_FFI)DevnetType_FFI_Chacha;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_dash_sdk_exampleJNI_DevnetType_1FFI_1Mojito_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  DevnetType_FFI result;
  
  (void)jenv;
  (void)jcls;
  result = (DevnetType_FFI)DevnetType_FFI_Mojito;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_dash_sdk_exampleJNI_DevnetType_1FFI_1WhiteRussian_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  DevnetType_FFI result;
  
  (void)jenv;
  (void)jcls;
  result = (DevnetType_FFI)DevnetType_FFI_WhiteRussian;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_dash_sdk_exampleJNI_KeyType_1FFI_1ECDSA_1SECP256K1_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  KeyType_FFI result;
  
  (void)jenv;
  (void)jcls;
  result = (KeyType_FFI)KeyType_FFI_ECDSA_SECP256K1;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_dash_sdk_exampleJNI_KeyType_1FFI_1BLS12_1381_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  KeyType_FFI result;
  
  (void)jenv;
  (void)jcls;
  result = (KeyType_FFI)KeyType_FFI_BLS12_381;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_dash_sdk_exampleJNI_KeyType_1FFI_1ECDSA_1HASH160_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  KeyType_FFI result;
  
  (void)jenv;
  (void)jcls;
  result = (KeyType_FFI)KeyType_FFI_ECDSA_HASH160;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_dash_sdk_exampleJNI_KeyType_1FFI_1BIP13_1SCRIPT_1HASH_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  KeyType_FFI result;
  
  (void)jenv;
  (void)jcls;
  result = (KeyType_FFI)KeyType_FFI_BIP13_SCRIPT_HASH;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_dash_sdk_exampleJNI_KeyType_1FFI_1EDDSA_125519_1HASH160_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  KeyType_FFI result;
  
  (void)jenv;
  (void)jcls;
  result = (KeyType_FFI)KeyType_FFI_EDDSA_25519_HASH160;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_dash_sdk_exampleJNI_Purpose_1FFI_1AUTHENTICATION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  Purpose_FFI result;
  
  (void)jenv;
  (void)jcls;
  result = (Purpose_FFI)Purpose_FFI_AUTHENTICATION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_dash_sdk_exampleJNI_Purpose_1FFI_1ENCRYPTION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  Purpose_FFI result;
  
  (void)jenv;
  (void)jcls;
  result = (Purpose_FFI)Purpose_FFI_ENCRYPTION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_dash_sdk_exampleJNI_Purpose_1FFI_1DECRYPTION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  Purpose_FFI result;
  
  (void)jenv;
  (void)jcls;
  result = (Purpose_FFI)Purpose_FFI_DECRYPTION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_dash_sdk_exampleJNI_Purpose_1FFI_1WITHDRAW_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  Purpose_FFI result;
  
  (void)jenv;
  (void)jcls;
  result = (Purpose_FFI)Purpose_FFI_WITHDRAW;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_dash_sdk_exampleJNI_Purpose_1FFI_1SYSTEM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  Purpose_FFI result;
  
  (void)jenv;
  (void)jcls;
  result = (Purpose_FFI)Purpose_FFI_SYSTEM;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_dash_sdk_exampleJNI_Purpose_1FFI_1VOTING_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  Purpose_FFI result;
  
  (void)jenv;
  (void)jcls;
  result = (Purpose_FFI)Purpose_FFI_VOTING;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_dash_sdk_exampleJNI_SecurityLevel_1FFI_1MASTER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  SecurityLevel_FFI result;
  
  (void)jenv;
  (void)jcls;
  result = (SecurityLevel_FFI)SecurityLevel_FFI_MASTER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_dash_sdk_exampleJNI_SecurityLevel_1FFI_1CRITICAL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  SecurityLevel_FFI result;
  
  (void)jenv;
  (void)jcls;
  result = (SecurityLevel_FFI)SecurityLevel_FFI_CRITICAL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_dash_sdk_exampleJNI_SecurityLevel_1FFI_1HIGH_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  SecurityLevel_FFI result;
  
  (void)jenv;
  (void)jcls;
  result = (SecurityLevel_FFI)SecurityLevel_FFI_HIGH;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_dash_sdk_exampleJNI_SecurityLevel_1FFI_1MEDIUM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  SecurityLevel_FFI result;
  
  (void)jenv;
  (void)jcls;
  result = (SecurityLevel_FFI)SecurityLevel_FFI_MEDIUM;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_RootStruct_1FFI_1name_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RootStruct_FFI *arg1 = (RootStruct_FFI *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RootStruct_FFI **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    delete [] arg1->name;
    if (arg2) {
      arg1->name = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->name, (const char *)arg2);
    } else {
      arg1->name = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_dash_sdk_exampleJNI_RootStruct_1FFI_1name_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RootStruct_FFI *arg1 = (RootStruct_FFI *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RootStruct_FFI **)&jarg1; 
  result = (char *) ((arg1)->name);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1RootStruct_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RootStruct_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RootStruct_FFI *)new RootStruct_FFI();
  *(RootStruct_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1RootStruct_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RootStruct_FFI *arg1 = (RootStruct_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RootStruct_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_ChainType_1FFI_1tag_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ChainType_FFI *arg1 = (ChainType_FFI *) 0 ;
  enum ChainType_FFI_Tag arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ChainType_FFI **)&jarg1; 
  arg2 = (enum ChainType_FFI_Tag)jarg2; 
  if (arg1) (arg1)->tag = arg2;
}


SWIGEXPORT jint JNICALL Java_org_dash_sdk_exampleJNI_ChainType_1FFI_1tag_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ChainType_FFI *arg1 = (ChainType_FFI *) 0 ;
  enum ChainType_FFI_Tag result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ChainType_FFI **)&jarg1; 
  result = (enum ChainType_FFI_Tag) ((arg1)->tag);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_ChainType_1FFI_1dev_1net_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ChainType_FFI *arg1 = (ChainType_FFI *) 0 ;
  enum DevnetType_FFI *arg2 = (enum DevnetType_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ChainType_FFI **)&jarg1; 
  arg2 = *(enum DevnetType_FFI **)&jarg2; 
  if (arg1) (arg1)->dev_net = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_ChainType_1FFI_1dev_1net_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ChainType_FFI *arg1 = (ChainType_FFI *) 0 ;
  enum DevnetType_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ChainType_FFI **)&jarg1; 
  result = (enum DevnetType_FFI *) ((arg1)->dev_net);
  *(enum DevnetType_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1ChainType_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ChainType_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ChainType_FFI *)new ChainType_FFI();
  *(ChainType_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1ChainType_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ChainType_FFI *arg1 = (ChainType_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ChainType_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_HashID_1_10_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jbyteArray jarg2) {
  HashID_FFI *arg1 = (HashID_FFI *) 0 ;
  uint8_t (*arg2)[32] = (uint8_t (*)[32]) 0 ;
  uint8_t *byteArray2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(HashID_FFI **)&jarg1; 
  {
    //arg2 = (uint8_t (*)[32]) JCALL2(GetByteArrayElements, jenv, jarg2, 0);
    if (!jarg2) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null array");
      return ;
    }
    const jsize sz = jenv->GetArrayLength(jarg2);
    jbyte* const jarr = jenv->GetByteArrayElements(jarg2, 0);
    if (!jarr) return ;
    byteArray2 = (uint8_t *)calloc(1, 32); // this is a memory leak?
    memcpy(byteArray2, jarr, sz);
    jenv->ReleaseByteArrayElements(jarg2, jarr, JNI_ABORT);
    arg2 = (uint8_t (*) [32])byteArray2;
  }
  if (arg1) (arg1)->_0 = (uint8_t (*)[32])arg2;
  {
    //JCALL3(ReleaseByteArrayElements, jenv, jarg2, (jbyte *) *arg2, 0);
  }
  
}


SWIGEXPORT jbyteArray JNICALL Java_org_dash_sdk_exampleJNI_HashID_1_10_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jbyteArray jresult = 0 ;
  HashID_FFI *arg1 = (HashID_FFI *) 0 ;
  uint8_t (*result)[32] = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(HashID_FFI **)&jarg1; 
  result = (uint8_t (*)[32]) ((arg1)->_0);
  {
    jresult = jenv->NewByteArray(32);
    jenv->SetByteArrayRegion(jresult, 0, 32, (jbyte *)(*result));
  }
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1HashID(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  HashID_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (HashID_FFI *)new HashID_FFI();
  *(HashID_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1HashID(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  HashID_FFI *arg1 = (HashID_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(HashID_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1chain_1common_1chain_1type_1ChainType_1values_1crate_1nested_1HashID_1FFI_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_crate_chain_common_chain_type_ChainType_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_crate_chain_common_chain_type_ChainType_values_crate_nested_HashID_FFI *) 0 ;
  uintptr_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_chain_common_chain_type_ChainType_values_crate_nested_HashID_FFI **)&jarg1; 
  arg2 = (uintptr_t)jarg2; 
  if (arg1) (arg1)->count = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1chain_1common_1chain_1type_1ChainType_1values_1crate_1nested_1HashID_1FFI_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_crate_chain_common_chain_type_ChainType_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_crate_chain_common_chain_type_ChainType_values_crate_nested_HashID_FFI *) 0 ;
  uintptr_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_chain_common_chain_type_ChainType_values_crate_nested_HashID_FFI **)&jarg1; 
  result = (uintptr_t) ((arg1)->count);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1chain_1common_1chain_1type_1ChainType_1values_1crate_1nested_1HashID_1FFI_1keys_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_crate_chain_common_chain_type_ChainType_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_crate_chain_common_chain_type_ChainType_values_crate_nested_HashID_FFI *) 0 ;
  ChainType_FFI **arg2 = (ChainType_FFI **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_chain_common_chain_type_ChainType_values_crate_nested_HashID_FFI **)&jarg1; 
  arg2 = *(ChainType_FFI ***)&jarg2; 
  if (arg1) (arg1)->keys = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1chain_1common_1chain_1type_1ChainType_1values_1crate_1nested_1HashID_1FFI_1keys_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_crate_chain_common_chain_type_ChainType_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_crate_chain_common_chain_type_ChainType_values_crate_nested_HashID_FFI *) 0 ;
  ChainType_FFI **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_chain_common_chain_type_ChainType_values_crate_nested_HashID_FFI **)&jarg1; 
  result = (ChainType_FFI **) ((arg1)->keys);
  *(ChainType_FFI ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1chain_1common_1chain_1type_1ChainType_1values_1crate_1nested_1HashID_1FFI_1values_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_crate_chain_common_chain_type_ChainType_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_crate_chain_common_chain_type_ChainType_values_crate_nested_HashID_FFI *) 0 ;
  HashID_FFI **arg2 = (HashID_FFI **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_chain_common_chain_type_ChainType_values_crate_nested_HashID_FFI **)&jarg1; 
  arg2 = *(HashID_FFI ***)&jarg2; 
  if (arg1) (arg1)->values = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1chain_1common_1chain_1type_1ChainType_1values_1crate_1nested_1HashID_1FFI_1values_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_crate_chain_common_chain_type_ChainType_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_crate_chain_common_chain_type_ChainType_values_crate_nested_HashID_FFI *) 0 ;
  HashID_FFI **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_chain_common_chain_type_ChainType_values_crate_nested_HashID_FFI **)&jarg1; 
  result = (HashID_FFI **) ((arg1)->values);
  *(HashID_FFI ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1std_1collections_1Map_1keys_1crate_1chain_1common_1chain_1type_1ChainType_1values_1crate_1nested_1HashID_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std_collections_Map_keys_crate_chain_common_chain_type_ChainType_values_crate_nested_HashID_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (std_collections_Map_keys_crate_chain_common_chain_type_ChainType_values_crate_nested_HashID_FFI *)new std_collections_Map_keys_crate_chain_common_chain_type_ChainType_values_crate_nested_HashID_FFI();
  *(std_collections_Map_keys_crate_chain_common_chain_type_ChainType_values_crate_nested_HashID_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1std_1collections_1Map_1keys_1crate_1chain_1common_1chain_1type_1ChainType_1values_1crate_1nested_1HashID_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std_collections_Map_keys_crate_chain_common_chain_type_ChainType_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_crate_chain_common_chain_type_ChainType_values_crate_nested_HashID_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std_collections_Map_keys_crate_chain_common_chain_type_ChainType_values_crate_nested_HashID_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_IHaveChainSettings_1VTable_1name_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  IHaveChainSettings_VTable *arg1 = (IHaveChainSettings_VTable *) 0 ;
  char *(*arg2)(void const *) = (char *(*)(void const *)) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IHaveChainSettings_VTable **)&jarg1; 
  arg2 = *(char *(**)(void const *))&jarg2; 
  if (arg1) (arg1)->name = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_IHaveChainSettings_1VTable_1name_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  IHaveChainSettings_VTable *arg1 = (IHaveChainSettings_VTable *) 0 ;
  char *(*result)(void const *) = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IHaveChainSettings_VTable **)&jarg1; 
  result = (char *(*)(void const *)) ((arg1)->name);
  *(char *(**)(void const *))&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_IHaveChainSettings_1VTable_1genesis_1hash_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  IHaveChainSettings_VTable *arg1 = (IHaveChainSettings_VTable *) 0 ;
  HashID_FFI *(*arg2)(void const *) = (HashID_FFI *(*)(void const *)) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IHaveChainSettings_VTable **)&jarg1; 
  arg2 = *(HashID_FFI *(**)(void const *))&jarg2; 
  if (arg1) (arg1)->genesis_hash = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_IHaveChainSettings_1VTable_1genesis_1hash_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  IHaveChainSettings_VTable *arg1 = (IHaveChainSettings_VTable *) 0 ;
  HashID_FFI *(*result)(void const *) = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IHaveChainSettings_VTable **)&jarg1; 
  result = (HashID_FFI *(*)(void const *)) ((arg1)->genesis_hash);
  *(HashID_FFI *(**)(void const *))&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_IHaveChainSettings_1VTable_1genesis_1height_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  IHaveChainSettings_VTable *arg1 = (IHaveChainSettings_VTable *) 0 ;
  uint32_t (*arg2)(void const *) = (uint32_t (*)(void const *)) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IHaveChainSettings_VTable **)&jarg1; 
  arg2 = *(uint32_t (**)(void const *))&jarg2; 
  if (arg1) (arg1)->genesis_height = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_IHaveChainSettings_1VTable_1genesis_1height_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  IHaveChainSettings_VTable *arg1 = (IHaveChainSettings_VTable *) 0 ;
  uint32_t (*result)(void const *) = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IHaveChainSettings_VTable **)&jarg1; 
  result = (uint32_t (*)(void const *)) ((arg1)->genesis_height);
  *(uint32_t (**)(void const *))&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_IHaveChainSettings_1VTable_1has_1genesis_1hash_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  IHaveChainSettings_VTable *arg1 = (IHaveChainSettings_VTable *) 0 ;
  bool (*arg2)(void const *,HashID_FFI *) = (bool (*)(void const *,HashID_FFI *)) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IHaveChainSettings_VTable **)&jarg1; 
  arg2 = *(bool (**)(void const *,HashID_FFI *))&jarg2; 
  if (arg1) (arg1)->has_genesis_hash = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_IHaveChainSettings_1VTable_1has_1genesis_1hash_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  IHaveChainSettings_VTable *arg1 = (IHaveChainSettings_VTable *) 0 ;
  bool (*result)(void const *,HashID_FFI *) = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IHaveChainSettings_VTable **)&jarg1; 
  result = (bool (*)(void const *,HashID_FFI *)) ((arg1)->has_genesis_hash);
  *(bool (**)(void const *,HashID_FFI *))&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_IHaveChainSettings_1VTable_1get_1hash_1by_1hash_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  IHaveChainSettings_VTable *arg1 = (IHaveChainSettings_VTable *) 0 ;
  HashID_FFI *(*arg2)(void const *,HashID_FFI *) = (HashID_FFI *(*)(void const *,HashID_FFI *)) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IHaveChainSettings_VTable **)&jarg1; 
  arg2 = *(HashID_FFI *(**)(void const *,HashID_FFI *))&jarg2; 
  if (arg1) (arg1)->get_hash_by_hash = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_IHaveChainSettings_1VTable_1get_1hash_1by_1hash_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  IHaveChainSettings_VTable *arg1 = (IHaveChainSettings_VTable *) 0 ;
  HashID_FFI *(*result)(void const *,HashID_FFI *) = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IHaveChainSettings_VTable **)&jarg1; 
  result = (HashID_FFI *(*)(void const *,HashID_FFI *)) ((arg1)->get_hash_by_hash);
  *(HashID_FFI *(**)(void const *,HashID_FFI *))&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_IHaveChainSettings_1VTable_1should_1process_1llmq_1of_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  IHaveChainSettings_VTable *arg1 = (IHaveChainSettings_VTable *) 0 ;
  bool (*arg2)(void const *,uint16_t) = (bool (*)(void const *,uint16_t)) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IHaveChainSettings_VTable **)&jarg1; 
  arg2 = *(bool (**)(void const *,uint16_t))&jarg2; 
  if (arg1) (arg1)->should_process_llmq_of_type = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_IHaveChainSettings_1VTable_1should_1process_1llmq_1of_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  IHaveChainSettings_VTable *arg1 = (IHaveChainSettings_VTable *) 0 ;
  bool (*result)(void const *,uint16_t) = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IHaveChainSettings_VTable **)&jarg1; 
  result = (bool (*)(void const *,uint16_t)) ((arg1)->should_process_llmq_of_type);
  *(bool (**)(void const *,uint16_t))&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1IHaveChainSettings_1VTable(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  IHaveChainSettings_VTable *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (IHaveChainSettings_VTable *)new IHaveChainSettings_VTable();
  *(IHaveChainSettings_VTable **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1IHaveChainSettings_1VTable(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  IHaveChainSettings_VTable *arg1 = (IHaveChainSettings_VTable *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(IHaveChainSettings_VTable **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_IHaveChainSettings_1TraitObject_1object_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  IHaveChainSettings_TraitObject *arg1 = (IHaveChainSettings_TraitObject *) 0 ;
  void *arg2 = (void *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IHaveChainSettings_TraitObject **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  if (arg1) (arg1)->object = (void const *)arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_IHaveChainSettings_1TraitObject_1object_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  IHaveChainSettings_TraitObject *arg1 = (IHaveChainSettings_TraitObject *) 0 ;
  void *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IHaveChainSettings_TraitObject **)&jarg1; 
  result = (void *) ((arg1)->object);
  *(void **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_IHaveChainSettings_1TraitObject_1vtable_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  IHaveChainSettings_TraitObject *arg1 = (IHaveChainSettings_TraitObject *) 0 ;
  IHaveChainSettings_VTable *arg2 = (IHaveChainSettings_VTable *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(IHaveChainSettings_TraitObject **)&jarg1; 
  arg2 = *(IHaveChainSettings_VTable **)&jarg2; 
  if (arg1) (arg1)->vtable = (IHaveChainSettings_VTable const *)arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_IHaveChainSettings_1TraitObject_1vtable_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  IHaveChainSettings_TraitObject *arg1 = (IHaveChainSettings_TraitObject *) 0 ;
  IHaveChainSettings_VTable *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IHaveChainSettings_TraitObject **)&jarg1; 
  result = (IHaveChainSettings_VTable *) ((arg1)->vtable);
  *(IHaveChainSettings_VTable **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1IHaveChainSettings_1TraitObject(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  IHaveChainSettings_TraitObject *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (IHaveChainSettings_TraitObject *)new IHaveChainSettings_TraitObject();
  *(IHaveChainSettings_TraitObject **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1IHaveChainSettings_1TraitObject(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  IHaveChainSettings_TraitObject *arg1 = (IHaveChainSettings_TraitObject *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(IHaveChainSettings_TraitObject **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_IdentifierBytes32_1_10_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jbyteArray jarg2) {
  IdentifierBytes32_FFI *arg1 = (IdentifierBytes32_FFI *) 0 ;
  uint8_t (*arg2)[32] = (uint8_t (*)[32]) 0 ;
  uint8_t *byteArray2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IdentifierBytes32_FFI **)&jarg1; 
  {
    //arg2 = (uint8_t (*)[32]) JCALL2(GetByteArrayElements, jenv, jarg2, 0);
    if (!jarg2) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null array");
      return ;
    }
    const jsize sz = jenv->GetArrayLength(jarg2);
    jbyte* const jarr = jenv->GetByteArrayElements(jarg2, 0);
    if (!jarr) return ;
    byteArray2 = (uint8_t *)calloc(1, 32); // this is a memory leak?
    memcpy(byteArray2, jarr, sz);
    jenv->ReleaseByteArrayElements(jarg2, jarr, JNI_ABORT);
    arg2 = (uint8_t (*) [32])byteArray2;
  }
  if (arg1) (arg1)->_0 = (uint8_t (*)[32])arg2;
  {
    //JCALL3(ReleaseByteArrayElements, jenv, jarg2, (jbyte *) *arg2, 0);
  }
  
}


SWIGEXPORT jbyteArray JNICALL Java_org_dash_sdk_exampleJNI_IdentifierBytes32_1_10_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jbyteArray jresult = 0 ;
  IdentifierBytes32_FFI *arg1 = (IdentifierBytes32_FFI *) 0 ;
  uint8_t (*result)[32] = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IdentifierBytes32_FFI **)&jarg1; 
  result = (uint8_t (*)[32]) ((arg1)->_0);
  {
    jresult = jenv->NewByteArray(32);
    jenv->SetByteArrayRegion(jresult, 0, 32, (jbyte *)(*result));
  }
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1IdentifierBytes32(JNIEnv *jenv, jclass jcls, jshortArray jarg1) {
  jlong jresult = 0 ;
  uint8_t *arg1 ;
  jshort *jarr1 ;
  IdentifierBytes32_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if (jarg1 && jenv->GetArrayLength(jarg1) != 32) {
    SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, "incorrect array size");
    return 0;
  }
  if (!SWIG_JavaArrayInUchar(jenv, &jarr1, (unsigned char **)&arg1, jarg1)) return 0; 
  result = (IdentifierBytes32_FFI *)new_IdentifierBytes32_FFI(arg1);
  *(IdentifierBytes32_FFI **)&jresult = result; 
  SWIG_JavaArrayArgoutUchar(jenv, jarr1, (unsigned char *)arg1, jarg1); 
  delete [] arg1; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1IdentifierBytes32(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  IdentifierBytes32_FFI *arg1 = (IdentifierBytes32_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(IdentifierBytes32_FFI **)&jarg1; 
  delete_IdentifierBytes32_FFI(arg1);
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_Identifier_1_10_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  Identifier_FFI *arg1 = (Identifier_FFI *) 0 ;
  IdentifierBytes32_FFI *arg2 = (IdentifierBytes32_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Identifier_FFI **)&jarg1; 
  arg2 = *(IdentifierBytes32_FFI **)&jarg2; 
  if (arg1) (arg1)->_0 = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_Identifier_1_10_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Identifier_FFI *arg1 = (Identifier_FFI *) 0 ;
  IdentifierBytes32_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Identifier_FFI **)&jarg1; 
  result = (IdentifierBytes32_FFI *) ((arg1)->_0);
  *(IdentifierBytes32_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1Identifier(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Identifier_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (Identifier_FFI *)new Identifier_FFI();
  *(Identifier_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1Identifier(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Identifier_FFI *arg1 = (Identifier_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Identifier_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_DataContractNotPresentError_1FFI_1data_1contract_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  DataContractNotPresentError_FFI *arg1 = (DataContractNotPresentError_FFI *) 0 ;
  Identifier_FFI *arg2 = (Identifier_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(DataContractNotPresentError_FFI **)&jarg1; 
  arg2 = *(Identifier_FFI **)&jarg2; 
  if (arg1) (arg1)->data_contract_id = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_DataContractNotPresentError_1FFI_1data_1contract_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  DataContractNotPresentError_FFI *arg1 = (DataContractNotPresentError_FFI *) 0 ;
  Identifier_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DataContractNotPresentError_FFI **)&jarg1; 
  result = (Identifier_FFI *) ((arg1)->data_contract_id);
  *(Identifier_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1DataContractNotPresentError_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  DataContractNotPresentError_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (DataContractNotPresentError_FFI *)new DataContractNotPresentError_FFI();
  *(DataContractNotPresentError_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1DataContractNotPresentError_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  DataContractNotPresentError_FFI *arg1 = (DataContractNotPresentError_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(DataContractNotPresentError_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_Vec_1crate_1nested_1HashID_1FFI_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  Vec_crate_nested_HashID_FFI *arg1 = (Vec_crate_nested_HashID_FFI *) 0 ;
  uintptr_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vec_crate_nested_HashID_FFI **)&jarg1; 
  arg2 = (uintptr_t)jarg2; 
  if (arg1) (arg1)->count = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_Vec_1crate_1nested_1HashID_1FFI_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Vec_crate_nested_HashID_FFI *arg1 = (Vec_crate_nested_HashID_FFI *) 0 ;
  uintptr_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vec_crate_nested_HashID_FFI **)&jarg1; 
  result = (uintptr_t) ((arg1)->count);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_Vec_1crate_1nested_1HashID_1FFI_1values_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  Vec_crate_nested_HashID_FFI *arg1 = (Vec_crate_nested_HashID_FFI *) 0 ;
  HashID_FFI **arg2 = (HashID_FFI **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vec_crate_nested_HashID_FFI **)&jarg1; 
  arg2 = *(HashID_FFI ***)&jarg2; 
  if (arg1) (arg1)->values = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_Vec_1crate_1nested_1HashID_1FFI_1values_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Vec_crate_nested_HashID_FFI *arg1 = (Vec_crate_nested_HashID_FFI *) 0 ;
  HashID_FFI **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vec_crate_nested_HashID_FFI **)&jarg1; 
  result = (HashID_FFI **) ((arg1)->values);
  *(HashID_FFI ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1Vec_1crate_1nested_1HashID_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Vec_crate_nested_HashID_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (Vec_crate_nested_HashID_FFI *)new Vec_crate_nested_HashID_FFI();
  *(Vec_crate_nested_HashID_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1Vec_1crate_1nested_1HashID_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Vec_crate_nested_HashID_FFI *arg1 = (Vec_crate_nested_HashID_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Vec_crate_nested_HashID_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1Vec_1crate_1nested_1HashID_1FFI_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_crate_nested_HashID_values_Vec_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_Vec_crate_nested_HashID_FFI *) 0 ;
  uintptr_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_Vec_crate_nested_HashID_FFI **)&jarg1; 
  arg2 = (uintptr_t)jarg2; 
  if (arg1) (arg1)->count = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1Vec_1crate_1nested_1HashID_1FFI_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_Vec_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_Vec_crate_nested_HashID_FFI *) 0 ;
  uintptr_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_Vec_crate_nested_HashID_FFI **)&jarg1; 
  result = (uintptr_t) ((arg1)->count);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1Vec_1crate_1nested_1HashID_1FFI_1keys_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_crate_nested_HashID_values_Vec_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_Vec_crate_nested_HashID_FFI *) 0 ;
  HashID_FFI **arg2 = (HashID_FFI **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_Vec_crate_nested_HashID_FFI **)&jarg1; 
  arg2 = *(HashID_FFI ***)&jarg2; 
  if (arg1) (arg1)->keys = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1Vec_1crate_1nested_1HashID_1FFI_1keys_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_Vec_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_Vec_crate_nested_HashID_FFI *) 0 ;
  HashID_FFI **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_Vec_crate_nested_HashID_FFI **)&jarg1; 
  result = (HashID_FFI **) ((arg1)->keys);
  *(HashID_FFI ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1Vec_1crate_1nested_1HashID_1FFI_1values_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_crate_nested_HashID_values_Vec_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_Vec_crate_nested_HashID_FFI *) 0 ;
  Vec_crate_nested_HashID_FFI **arg2 = (Vec_crate_nested_HashID_FFI **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_Vec_crate_nested_HashID_FFI **)&jarg1; 
  arg2 = *(Vec_crate_nested_HashID_FFI ***)&jarg2; 
  if (arg1) (arg1)->values = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1Vec_1crate_1nested_1HashID_1FFI_1values_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_Vec_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_Vec_crate_nested_HashID_FFI *) 0 ;
  Vec_crate_nested_HashID_FFI **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_Vec_crate_nested_HashID_FFI **)&jarg1; 
  result = (Vec_crate_nested_HashID_FFI **) ((arg1)->values);
  *(Vec_crate_nested_HashID_FFI ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1Vec_1crate_1nested_1HashID_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_Vec_crate_nested_HashID_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (std_collections_Map_keys_crate_nested_HashID_values_Vec_crate_nested_HashID_FFI *)new std_collections_Map_keys_crate_nested_HashID_values_Vec_crate_nested_HashID_FFI();
  *(std_collections_Map_keys_crate_nested_HashID_values_Vec_crate_nested_HashID_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1Vec_1crate_1nested_1HashID_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std_collections_Map_keys_crate_nested_HashID_values_Vec_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_Vec_crate_nested_HashID_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_Vec_crate_nested_HashID_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_MapOfVecHashes_1FFI_1_10_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  MapOfVecHashes_FFI *arg1 = (MapOfVecHashes_FFI *) 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_Vec_crate_nested_HashID_FFI *arg2 = (std_collections_Map_keys_crate_nested_HashID_values_Vec_crate_nested_HashID_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(MapOfVecHashes_FFI **)&jarg1; 
  arg2 = *(std_collections_Map_keys_crate_nested_HashID_values_Vec_crate_nested_HashID_FFI **)&jarg2; 
  if (arg1) (arg1)->_0 = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_MapOfVecHashes_1FFI_1_10_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  MapOfVecHashes_FFI *arg1 = (MapOfVecHashes_FFI *) 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_Vec_crate_nested_HashID_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MapOfVecHashes_FFI **)&jarg1; 
  result = (std_collections_Map_keys_crate_nested_HashID_values_Vec_crate_nested_HashID_FFI *) ((arg1)->_0);
  *(std_collections_Map_keys_crate_nested_HashID_values_Vec_crate_nested_HashID_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1MapOfVecHashes_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  MapOfVecHashes_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (MapOfVecHashes_FFI *)new MapOfVecHashes_FFI();
  *(MapOfVecHashes_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1MapOfVecHashes_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  MapOfVecHashes_FFI *arg1 = (MapOfVecHashes_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(MapOfVecHashes_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_TimestampMillis_1FFI_1_10_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  TimestampMillis_FFI *arg1 = (TimestampMillis_FFI *) 0 ;
  uint64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TimestampMillis_FFI **)&jarg1; 
  {
    jclass clazz;
    jmethodID mid;
    jbyteArray ba;
    jbyte* bae;
    jsize sz;
    int i;
    
    if (!jarg2) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "BigInteger null");
      return ;
    }
    clazz = jenv->GetObjectClass(jarg2);
    mid = jenv->GetMethodID(clazz, "toByteArray", "()[B");
    ba = (jbyteArray)jenv->CallObjectMethod(jarg2, mid);
    bae = jenv->GetByteArrayElements(ba, 0);
    sz = jenv->GetArrayLength(ba);
    arg2 = 0;
    if (sz > 0) {
      arg2 = (uint64_t)(signed char)bae[0];
      for(i=1; i<sz; i++) {
        arg2 = (arg2 << 8) | (uint64_t)(unsigned char)bae[i];
      }
    }
    jenv->ReleaseByteArrayElements(ba, bae, 0);
  }
  if (arg1) (arg1)->_0 = arg2;
}


SWIGEXPORT jobject JNICALL Java_org_dash_sdk_exampleJNI_TimestampMillis_1FFI_1_10_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jobject jresult = 0 ;
  TimestampMillis_FFI *arg1 = (TimestampMillis_FFI *) 0 ;
  uint64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TimestampMillis_FFI **)&jarg1; 
  result = (uint64_t) ((arg1)->_0);
  {
    jbyteArray ba = jenv->NewByteArray(9);
    jbyte* bae = jenv->GetByteArrayElements(ba, 0);
    jclass clazz = jenv->FindClass("java/math/BigInteger");
    jmethodID mid = jenv->GetMethodID(clazz, "<init>", "([B)V");
    jobject bigint;
    int i;
    
    bae[0] = 0;
    for(i=1; i<9; i++ ) {
      bae[i] = (jbyte)(result>>8*(8-i));
    }
    
    jenv->ReleaseByteArrayElements(ba, bae, 0);
    bigint = jenv->NewObject(clazz, mid, ba);
    jenv->DeleteLocalRef(ba);
    jresult = bigint;
  }
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1TimestampMillis_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  TimestampMillis_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (TimestampMillis_FFI *)new TimestampMillis_FFI();
  *(TimestampMillis_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1TimestampMillis_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  TimestampMillis_FFI *arg1 = (TimestampMillis_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(TimestampMillis_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_KeyID_1_10_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  KeyID_FFI *arg1 = (KeyID_FFI *) 0 ;
  uint32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(KeyID_FFI **)&jarg1; 
  arg2 = (uint32_t)jarg2; 
  if (arg1) (arg1)->_0 = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_KeyID_1_10_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  KeyID_FFI *arg1 = (KeyID_FFI *) 0 ;
  uint32_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(KeyID_FFI **)&jarg1; 
  result = (uint32_t) ((arg1)->_0);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1KeyID(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  KeyID_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (KeyID_FFI *)new KeyID_FFI();
  *(KeyID_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1KeyID(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  KeyID_FFI *arg1 = (KeyID_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(KeyID_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_ContractBounds_1FFI_1SingleContractDocumentType_1Body_1_10_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  ContractBounds_FFI_SingleContractDocumentType_Body *arg1 = (ContractBounds_FFI_SingleContractDocumentType_Body *) 0 ;
  Identifier_FFI *arg2 = (Identifier_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(ContractBounds_FFI_SingleContractDocumentType_Body **)&jarg1; 
  arg2 = *(Identifier_FFI **)&jarg2; 
  if (arg1) (arg1)->_0 = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_ContractBounds_1FFI_1SingleContractDocumentType_1Body_1_10_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ContractBounds_FFI_SingleContractDocumentType_Body *arg1 = (ContractBounds_FFI_SingleContractDocumentType_Body *) 0 ;
  Identifier_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ContractBounds_FFI_SingleContractDocumentType_Body **)&jarg1; 
  result = (Identifier_FFI *) ((arg1)->_0);
  *(Identifier_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_ContractBounds_1FFI_1SingleContractDocumentType_1Body_1_11_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ContractBounds_FFI_SingleContractDocumentType_Body *arg1 = (ContractBounds_FFI_SingleContractDocumentType_Body *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ContractBounds_FFI_SingleContractDocumentType_Body **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    delete [] arg1->_1;
    if (arg2) {
      arg1->_1 = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->_1, (const char *)arg2);
    } else {
      arg1->_1 = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_dash_sdk_exampleJNI_ContractBounds_1FFI_1SingleContractDocumentType_1Body_1_11_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ContractBounds_FFI_SingleContractDocumentType_Body *arg1 = (ContractBounds_FFI_SingleContractDocumentType_Body *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ContractBounds_FFI_SingleContractDocumentType_Body **)&jarg1; 
  result = (char *) ((arg1)->_1);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1ContractBounds_1FFI_1SingleContractDocumentType_1Body(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ContractBounds_FFI_SingleContractDocumentType_Body *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ContractBounds_FFI_SingleContractDocumentType_Body *)new ContractBounds_FFI_SingleContractDocumentType_Body();
  *(ContractBounds_FFI_SingleContractDocumentType_Body **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1ContractBounds_1FFI_1SingleContractDocumentType_1Body(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ContractBounds_FFI_SingleContractDocumentType_Body *arg1 = (ContractBounds_FFI_SingleContractDocumentType_Body *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ContractBounds_FFI_SingleContractDocumentType_Body **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_ContractBounds_1FFI_1tag_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ContractBounds_FFI *arg1 = (ContractBounds_FFI *) 0 ;
  enum ContractBounds_FFI_Tag arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ContractBounds_FFI **)&jarg1; 
  arg2 = (enum ContractBounds_FFI_Tag)jarg2; 
  if (arg1) (arg1)->tag = arg2;
}


SWIGEXPORT jint JNICALL Java_org_dash_sdk_exampleJNI_ContractBounds_1FFI_1tag_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ContractBounds_FFI *arg1 = (ContractBounds_FFI *) 0 ;
  enum ContractBounds_FFI_Tag result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ContractBounds_FFI **)&jarg1; 
  result = (enum ContractBounds_FFI_Tag) ((arg1)->tag);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_ContractBounds_1FFI_1single_1contract_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  ContractBounds_FFI *arg1 = (ContractBounds_FFI *) 0 ;
  Identifier_FFI *arg2 = (Identifier_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(ContractBounds_FFI **)&jarg1; 
  arg2 = *(Identifier_FFI **)&jarg2; 
  if (arg1) (arg1)->single_contract = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_ContractBounds_1FFI_1single_1contract_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ContractBounds_FFI *arg1 = (ContractBounds_FFI *) 0 ;
  Identifier_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ContractBounds_FFI **)&jarg1; 
  result = (Identifier_FFI *) ((arg1)->single_contract);
  *(Identifier_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_ContractBounds_1FFI_1single_1contract_1document_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  ContractBounds_FFI *arg1 = (ContractBounds_FFI *) 0 ;
  ContractBounds_FFI_SingleContractDocumentType_Body *arg2 = (ContractBounds_FFI_SingleContractDocumentType_Body *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(ContractBounds_FFI **)&jarg1; 
  arg2 = *(ContractBounds_FFI_SingleContractDocumentType_Body **)&jarg2; 
  if (arg1) (arg1)->single_contract_document_type = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_ContractBounds_1FFI_1single_1contract_1document_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ContractBounds_FFI *arg1 = (ContractBounds_FFI *) 0 ;
  ContractBounds_FFI_SingleContractDocumentType_Body *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ContractBounds_FFI **)&jarg1; 
  result = (ContractBounds_FFI_SingleContractDocumentType_Body *)& ((arg1)->single_contract_document_type);
  *(ContractBounds_FFI_SingleContractDocumentType_Body **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1ContractBounds_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ContractBounds_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ContractBounds_FFI *)new ContractBounds_FFI();
  *(ContractBounds_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1ContractBounds_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ContractBounds_FFI *arg1 = (ContractBounds_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ContractBounds_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_BinaryData_1_10_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  BinaryData_FFI *arg1 = (BinaryData_FFI *) 0 ;
  Vec_u8_FFI *arg2 = (Vec_u8_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(BinaryData_FFI **)&jarg1; 
  arg2 = *(Vec_u8_FFI **)&jarg2; 
  if (arg1) (arg1)->_0 = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_BinaryData_1_10_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  BinaryData_FFI *arg1 = (BinaryData_FFI *) 0 ;
  Vec_u8_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(BinaryData_FFI **)&jarg1; 
  result = (Vec_u8_FFI *) ((arg1)->_0);
  *(Vec_u8_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1BinaryData(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  BinaryData_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (BinaryData_FFI *)new BinaryData_FFI();
  *(BinaryData_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1BinaryData(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  BinaryData_FFI *arg1 = (BinaryData_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(BinaryData_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_IdentityPublicKeyV0_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  IdentityPublicKeyV0_FFI *arg1 = (IdentityPublicKeyV0_FFI *) 0 ;
  KeyID_FFI *arg2 = (KeyID_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(IdentityPublicKeyV0_FFI **)&jarg1; 
  arg2 = *(KeyID_FFI **)&jarg2; 
  if (arg1) (arg1)->id = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_IdentityPublicKeyV0_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  IdentityPublicKeyV0_FFI *arg1 = (IdentityPublicKeyV0_FFI *) 0 ;
  KeyID_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IdentityPublicKeyV0_FFI **)&jarg1; 
  result = (KeyID_FFI *) ((arg1)->id);
  *(KeyID_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_IdentityPublicKeyV0_1security_1level_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  IdentityPublicKeyV0_FFI *arg1 = (IdentityPublicKeyV0_FFI *) 0 ;
  enum SecurityLevel_FFI *arg2 = (enum SecurityLevel_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IdentityPublicKeyV0_FFI **)&jarg1; 
  arg2 = *(enum SecurityLevel_FFI **)&jarg2; 
  if (arg1) (arg1)->security_level = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_IdentityPublicKeyV0_1security_1level_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  IdentityPublicKeyV0_FFI *arg1 = (IdentityPublicKeyV0_FFI *) 0 ;
  enum SecurityLevel_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IdentityPublicKeyV0_FFI **)&jarg1; 
  result = (enum SecurityLevel_FFI *) ((arg1)->security_level);
  *(enum SecurityLevel_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_IdentityPublicKeyV0_1contract_1bounds_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  IdentityPublicKeyV0_FFI *arg1 = (IdentityPublicKeyV0_FFI *) 0 ;
  ContractBounds_FFI *arg2 = (ContractBounds_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(IdentityPublicKeyV0_FFI **)&jarg1; 
  arg2 = *(ContractBounds_FFI **)&jarg2; 
  if (arg1) (arg1)->contract_bounds = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_IdentityPublicKeyV0_1contract_1bounds_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  IdentityPublicKeyV0_FFI *arg1 = (IdentityPublicKeyV0_FFI *) 0 ;
  ContractBounds_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IdentityPublicKeyV0_FFI **)&jarg1; 
  result = (ContractBounds_FFI *) ((arg1)->contract_bounds);
  *(ContractBounds_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_IdentityPublicKeyV0_1key_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  IdentityPublicKeyV0_FFI *arg1 = (IdentityPublicKeyV0_FFI *) 0 ;
  enum KeyType_FFI *arg2 = (enum KeyType_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IdentityPublicKeyV0_FFI **)&jarg1; 
  arg2 = *(enum KeyType_FFI **)&jarg2; 
  if (arg1) (arg1)->key_type = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_IdentityPublicKeyV0_1key_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  IdentityPublicKeyV0_FFI *arg1 = (IdentityPublicKeyV0_FFI *) 0 ;
  enum KeyType_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IdentityPublicKeyV0_FFI **)&jarg1; 
  result = (enum KeyType_FFI *) ((arg1)->key_type);
  *(enum KeyType_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_IdentityPublicKeyV0_1read_1only_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  IdentityPublicKeyV0_FFI *arg1 = (IdentityPublicKeyV0_FFI *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IdentityPublicKeyV0_FFI **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->read_only = arg2;
}


SWIGEXPORT jboolean JNICALL Java_org_dash_sdk_exampleJNI_IdentityPublicKeyV0_1read_1only_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  IdentityPublicKeyV0_FFI *arg1 = (IdentityPublicKeyV0_FFI *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IdentityPublicKeyV0_FFI **)&jarg1; 
  result = (bool) ((arg1)->read_only);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_IdentityPublicKeyV0_1data_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  IdentityPublicKeyV0_FFI *arg1 = (IdentityPublicKeyV0_FFI *) 0 ;
  BinaryData_FFI *arg2 = (BinaryData_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(IdentityPublicKeyV0_FFI **)&jarg1; 
  arg2 = *(BinaryData_FFI **)&jarg2; 
  if (arg1) (arg1)->data = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_IdentityPublicKeyV0_1data_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  IdentityPublicKeyV0_FFI *arg1 = (IdentityPublicKeyV0_FFI *) 0 ;
  BinaryData_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IdentityPublicKeyV0_FFI **)&jarg1; 
  result = (BinaryData_FFI *) ((arg1)->data);
  *(BinaryData_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_IdentityPublicKeyV0_1disabled_1at_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  IdentityPublicKeyV0_FFI *arg1 = (IdentityPublicKeyV0_FFI *) 0 ;
  TimestampMillis_FFI *arg2 = (TimestampMillis_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(IdentityPublicKeyV0_FFI **)&jarg1; 
  arg2 = *(TimestampMillis_FFI **)&jarg2; 
  if (arg1) (arg1)->disabled_at = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_IdentityPublicKeyV0_1disabled_1at_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  IdentityPublicKeyV0_FFI *arg1 = (IdentityPublicKeyV0_FFI *) 0 ;
  TimestampMillis_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IdentityPublicKeyV0_FFI **)&jarg1; 
  result = (TimestampMillis_FFI *) ((arg1)->disabled_at);
  *(TimestampMillis_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_dash_sdk_exampleJNI_IdentityPublicKeyV0_1getPurpose(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  IdentityPublicKeyV0_FFI *arg1 = (IdentityPublicKeyV0_FFI *) 0 ;
  enum Purpose_FFI result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IdentityPublicKeyV0_FFI **)&jarg1; 
  result = (enum Purpose_FFI)IdentityPublicKeyV0_FFI_getPurpose(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_IdentityPublicKeyV0_1setPurpose(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  IdentityPublicKeyV0_FFI *arg1 = (IdentityPublicKeyV0_FFI *) 0 ;
  enum Purpose_FFI arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IdentityPublicKeyV0_FFI **)&jarg1; 
  arg2 = (enum Purpose_FFI)jarg2; 
  IdentityPublicKeyV0_FFI_setPurpose(arg1,arg2);
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1IdentityPublicKeyV0(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  IdentityPublicKeyV0_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (IdentityPublicKeyV0_FFI *)new IdentityPublicKeyV0_FFI();
  *(IdentityPublicKeyV0_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1IdentityPublicKeyV0(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  IdentityPublicKeyV0_FFI *arg1 = (IdentityPublicKeyV0_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(IdentityPublicKeyV0_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_IdentityPublicKey_1tag_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  IdentityPublicKey_FFI *arg1 = (IdentityPublicKey_FFI *) 0 ;
  enum IdentityPublicKey_FFI_Tag arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IdentityPublicKey_FFI **)&jarg1; 
  arg2 = (enum IdentityPublicKey_FFI_Tag)jarg2; 
  if (arg1) (arg1)->tag = arg2;
}


SWIGEXPORT jint JNICALL Java_org_dash_sdk_exampleJNI_IdentityPublicKey_1tag_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  IdentityPublicKey_FFI *arg1 = (IdentityPublicKey_FFI *) 0 ;
  enum IdentityPublicKey_FFI_Tag result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IdentityPublicKey_FFI **)&jarg1; 
  result = (enum IdentityPublicKey_FFI_Tag) ((arg1)->tag);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_IdentityPublicKey_1v0_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  IdentityPublicKey_FFI *arg1 = (IdentityPublicKey_FFI *) 0 ;
  IdentityPublicKeyV0_FFI *arg2 = (IdentityPublicKeyV0_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(IdentityPublicKey_FFI **)&jarg1; 
  arg2 = *(IdentityPublicKeyV0_FFI **)&jarg2; 
  if (arg1) (arg1)->v0 = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_IdentityPublicKey_1v0_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  IdentityPublicKey_FFI *arg1 = (IdentityPublicKey_FFI *) 0 ;
  IdentityPublicKeyV0_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IdentityPublicKey_FFI **)&jarg1; 
  result = (IdentityPublicKeyV0_FFI *) ((arg1)->v0);
  *(IdentityPublicKeyV0_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1IdentityPublicKey(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  IdentityPublicKey_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (IdentityPublicKey_FFI *)new IdentityPublicKey_FFI();
  *(IdentityPublicKey_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1IdentityPublicKey(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  IdentityPublicKey_FFI *arg1 = (IdentityPublicKey_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(IdentityPublicKey_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1crate_1nested_1HashID_1FFI_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *) 0 ;
  uintptr_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **)&jarg1; 
  arg2 = (uintptr_t)jarg2; 
  if (arg1) (arg1)->count = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1crate_1nested_1HashID_1FFI_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *) 0 ;
  uintptr_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **)&jarg1; 
  result = (uintptr_t) ((arg1)->count);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1crate_1nested_1HashID_1FFI_1keys_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *) 0 ;
  HashID_FFI **arg2 = (HashID_FFI **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **)&jarg1; 
  arg2 = *(HashID_FFI ***)&jarg2; 
  if (arg1) (arg1)->keys = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1crate_1nested_1HashID_1FFI_1keys_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *) 0 ;
  HashID_FFI **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **)&jarg1; 
  result = (HashID_FFI **) ((arg1)->keys);
  *(HashID_FFI ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1crate_1nested_1HashID_1FFI_1values_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *) 0 ;
  HashID_FFI **arg2 = (HashID_FFI **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **)&jarg1; 
  arg2 = *(HashID_FFI ***)&jarg2; 
  if (arg1) (arg1)->values = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1crate_1nested_1HashID_1FFI_1values_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *) 0 ;
  HashID_FFI **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **)&jarg1; 
  result = (HashID_FFI **) ((arg1)->values);
  *(HashID_FFI ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1crate_1nested_1HashID_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *)new std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI();
  *(std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1crate_1nested_1HashID_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_MapOfHashes_1FFI_1_10_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  MapOfHashes_FFI *arg1 = (MapOfHashes_FFI *) 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *arg2 = (std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(MapOfHashes_FFI **)&jarg1; 
  arg2 = *(std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **)&jarg2; 
  if (arg1) (arg1)->_0 = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_MapOfHashes_1FFI_1_10_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  MapOfHashes_FFI *arg1 = (MapOfHashes_FFI *) 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MapOfHashes_FFI **)&jarg1; 
  result = (std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *) ((arg1)->_0);
  *(std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1MapOfHashes_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  MapOfHashes_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (MapOfHashes_FFI *)new MapOfHashes_FFI();
  *(MapOfHashes_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1MapOfHashes_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  MapOfHashes_FFI *arg1 = (MapOfHashes_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(MapOfHashes_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_ProtocolError_1FFI_1StringDecodeError2_1Body_1_10_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ProtocolError_FFI_StringDecodeError2_Body *arg1 = (ProtocolError_FFI_StringDecodeError2_Body *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ProtocolError_FFI_StringDecodeError2_Body **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    delete [] arg1->_0;
    if (arg2) {
      arg1->_0 = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->_0, (const char *)arg2);
    } else {
      arg1->_0 = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_dash_sdk_exampleJNI_ProtocolError_1FFI_1StringDecodeError2_1Body_1_10_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ProtocolError_FFI_StringDecodeError2_Body *arg1 = (ProtocolError_FFI_StringDecodeError2_Body *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ProtocolError_FFI_StringDecodeError2_Body **)&jarg1; 
  result = (char *) ((arg1)->_0);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_ProtocolError_1FFI_1StringDecodeError2_1Body_1_11_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ProtocolError_FFI_StringDecodeError2_Body *arg1 = (ProtocolError_FFI_StringDecodeError2_Body *) 0 ;
  uint32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ProtocolError_FFI_StringDecodeError2_Body **)&jarg1; 
  arg2 = (uint32_t)jarg2; 
  if (arg1) (arg1)->_1 = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_ProtocolError_1FFI_1StringDecodeError2_1Body_1_11_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ProtocolError_FFI_StringDecodeError2_Body *arg1 = (ProtocolError_FFI_StringDecodeError2_Body *) 0 ;
  uint32_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ProtocolError_FFI_StringDecodeError2_Body **)&jarg1; 
  result = (uint32_t) ((arg1)->_1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1ProtocolError_1FFI_1StringDecodeError2_1Body(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ProtocolError_FFI_StringDecodeError2_Body *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ProtocolError_FFI_StringDecodeError2_Body *)new ProtocolError_FFI_StringDecodeError2_Body();
  *(ProtocolError_FFI_StringDecodeError2_Body **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1ProtocolError_1FFI_1StringDecodeError2_1Body(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ProtocolError_FFI_StringDecodeError2_Body *arg1 = (ProtocolError_FFI_StringDecodeError2_Body *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ProtocolError_FFI_StringDecodeError2_Body **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_ProtocolError_1FFI_1MaxEncodedBytesReachedError_1Body_1max_1size_1kbytes_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ProtocolError_FFI_MaxEncodedBytesReachedError_Body *arg1 = (ProtocolError_FFI_MaxEncodedBytesReachedError_Body *) 0 ;
  uintptr_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ProtocolError_FFI_MaxEncodedBytesReachedError_Body **)&jarg1; 
  arg2 = (uintptr_t)jarg2; 
  if (arg1) (arg1)->max_size_kbytes = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_ProtocolError_1FFI_1MaxEncodedBytesReachedError_1Body_1max_1size_1kbytes_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ProtocolError_FFI_MaxEncodedBytesReachedError_Body *arg1 = (ProtocolError_FFI_MaxEncodedBytesReachedError_Body *) 0 ;
  uintptr_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ProtocolError_FFI_MaxEncodedBytesReachedError_Body **)&jarg1; 
  result = (uintptr_t) ((arg1)->max_size_kbytes);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_ProtocolError_1FFI_1MaxEncodedBytesReachedError_1Body_1size_1hit_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ProtocolError_FFI_MaxEncodedBytesReachedError_Body *arg1 = (ProtocolError_FFI_MaxEncodedBytesReachedError_Body *) 0 ;
  uintptr_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ProtocolError_FFI_MaxEncodedBytesReachedError_Body **)&jarg1; 
  arg2 = (uintptr_t)jarg2; 
  if (arg1) (arg1)->size_hit = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_ProtocolError_1FFI_1MaxEncodedBytesReachedError_1Body_1size_1hit_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ProtocolError_FFI_MaxEncodedBytesReachedError_Body *arg1 = (ProtocolError_FFI_MaxEncodedBytesReachedError_Body *) 0 ;
  uintptr_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ProtocolError_FFI_MaxEncodedBytesReachedError_Body **)&jarg1; 
  result = (uintptr_t) ((arg1)->size_hit);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1ProtocolError_1FFI_1MaxEncodedBytesReachedError_1Body(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ProtocolError_FFI_MaxEncodedBytesReachedError_Body *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ProtocolError_FFI_MaxEncodedBytesReachedError_Body *)new ProtocolError_FFI_MaxEncodedBytesReachedError_Body();
  *(ProtocolError_FFI_MaxEncodedBytesReachedError_Body **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1ProtocolError_1FFI_1MaxEncodedBytesReachedError_1Body(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ProtocolError_FFI_MaxEncodedBytesReachedError_Body *arg1 = (ProtocolError_FFI_MaxEncodedBytesReachedError_Body *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ProtocolError_FFI_MaxEncodedBytesReachedError_Body **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_ProtocolError_1FFI_1tag_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ProtocolError_FFI *arg1 = (ProtocolError_FFI *) 0 ;
  enum ProtocolError_FFI_Tag arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ProtocolError_FFI **)&jarg1; 
  arg2 = (enum ProtocolError_FFI_Tag)jarg2; 
  if (arg1) (arg1)->tag = arg2;
}


SWIGEXPORT jint JNICALL Java_org_dash_sdk_exampleJNI_ProtocolError_1FFI_1tag_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ProtocolError_FFI *arg1 = (ProtocolError_FFI *) 0 ;
  enum ProtocolError_FFI_Tag result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ProtocolError_FFI **)&jarg1; 
  result = (enum ProtocolError_FFI_Tag) ((arg1)->tag);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_ProtocolError_1FFI_1identifier_1error_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ProtocolError_FFI *arg1 = (ProtocolError_FFI *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ProtocolError_FFI **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    delete [] arg1->identifier_error;
    if (arg2) {
      arg1->identifier_error = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->identifier_error, (const char *)arg2);
    } else {
      arg1->identifier_error = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_dash_sdk_exampleJNI_ProtocolError_1FFI_1identifier_1error_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ProtocolError_FFI *arg1 = (ProtocolError_FFI *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ProtocolError_FFI **)&jarg1; 
  result = (char *) ((arg1)->identifier_error);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_ProtocolError_1FFI_1string_1decode_1error_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ProtocolError_FFI *arg1 = (ProtocolError_FFI *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ProtocolError_FFI **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    delete [] arg1->string_decode_error;
    if (arg2) {
      arg1->string_decode_error = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->string_decode_error, (const char *)arg2);
    } else {
      arg1->string_decode_error = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_dash_sdk_exampleJNI_ProtocolError_1FFI_1string_1decode_1error_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ProtocolError_FFI *arg1 = (ProtocolError_FFI *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ProtocolError_FFI **)&jarg1; 
  result = (char *) ((arg1)->string_decode_error);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_ProtocolError_1FFI_1string_1decode_1error2_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  ProtocolError_FFI *arg1 = (ProtocolError_FFI *) 0 ;
  ProtocolError_FFI_StringDecodeError2_Body *arg2 = (ProtocolError_FFI_StringDecodeError2_Body *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(ProtocolError_FFI **)&jarg1; 
  arg2 = *(ProtocolError_FFI_StringDecodeError2_Body **)&jarg2; 
  if (arg1) (arg1)->string_decode_error2 = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_ProtocolError_1FFI_1string_1decode_1error2_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ProtocolError_FFI *arg1 = (ProtocolError_FFI *) 0 ;
  ProtocolError_FFI_StringDecodeError2_Body *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ProtocolError_FFI **)&jarg1; 
  result = (ProtocolError_FFI_StringDecodeError2_Body *)& ((arg1)->string_decode_error2);
  *(ProtocolError_FFI_StringDecodeError2_Body **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_ProtocolError_1FFI_1max_1encoded_1bytes_1reached_1error_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  ProtocolError_FFI *arg1 = (ProtocolError_FFI *) 0 ;
  ProtocolError_FFI_MaxEncodedBytesReachedError_Body *arg2 = (ProtocolError_FFI_MaxEncodedBytesReachedError_Body *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(ProtocolError_FFI **)&jarg1; 
  arg2 = *(ProtocolError_FFI_MaxEncodedBytesReachedError_Body **)&jarg2; 
  if (arg1) (arg1)->max_encoded_bytes_reached_error = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_ProtocolError_1FFI_1max_1encoded_1bytes_1reached_1error_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ProtocolError_FFI *arg1 = (ProtocolError_FFI *) 0 ;
  ProtocolError_FFI_MaxEncodedBytesReachedError_Body *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ProtocolError_FFI **)&jarg1; 
  result = (ProtocolError_FFI_MaxEncodedBytesReachedError_Body *)& ((arg1)->max_encoded_bytes_reached_error);
  *(ProtocolError_FFI_MaxEncodedBytesReachedError_Body **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_ProtocolError_1FFI_1encoding_1error_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ProtocolError_FFI *arg1 = (ProtocolError_FFI *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ProtocolError_FFI **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    delete [] arg1->encoding_error;
    if (arg2) {
      arg1->encoding_error = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->encoding_error, (const char *)arg2);
    } else {
      arg1->encoding_error = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_dash_sdk_exampleJNI_ProtocolError_1FFI_1encoding_1error_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ProtocolError_FFI *arg1 = (ProtocolError_FFI *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ProtocolError_FFI **)&jarg1; 
  result = (char *) ((arg1)->encoding_error);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_ProtocolError_1FFI_1encoding_1error2_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ProtocolError_FFI *arg1 = (ProtocolError_FFI *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ProtocolError_FFI **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    delete [] arg1->encoding_error2;
    if (arg2) {
      arg1->encoding_error2 = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->encoding_error2, (const char *)arg2);
    } else {
      arg1->encoding_error2 = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_dash_sdk_exampleJNI_ProtocolError_1FFI_1encoding_1error2_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ProtocolError_FFI *arg1 = (ProtocolError_FFI *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ProtocolError_FFI **)&jarg1; 
  result = (char *) ((arg1)->encoding_error2);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1ProtocolError_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ProtocolError_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ProtocolError_FFI *)new ProtocolError_FFI();
  *(ProtocolError_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1ProtocolError_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ProtocolError_FFI *arg1 = (ProtocolError_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ProtocolError_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_UsedStruct_1FFI_1_10_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  UsedStruct_FFI *arg1 = (UsedStruct_FFI *) 0 ;
  HashID_FFI *arg2 = (HashID_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(UsedStruct_FFI **)&jarg1; 
  arg2 = *(HashID_FFI **)&jarg2; 
  if (arg1) (arg1)->_0 = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_UsedStruct_1FFI_1_10_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  UsedStruct_FFI *arg1 = (UsedStruct_FFI *) 0 ;
  HashID_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UsedStruct_FFI **)&jarg1; 
  result = (HashID_FFI *) ((arg1)->_0);
  *(HashID_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1UsedStruct_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  UsedStruct_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (UsedStruct_FFI *)new UsedStruct_FFI();
  *(UsedStruct_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1UsedStruct_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  UsedStruct_FFI *arg1 = (UsedStruct_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(UsedStruct_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1KeyID_1values_1crate_1nested_1IdentityPublicKey_1FFI_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_crate_nested_KeyID_values_crate_nested_IdentityPublicKey_FFI *arg1 = (std_collections_Map_keys_crate_nested_KeyID_values_crate_nested_IdentityPublicKey_FFI *) 0 ;
  uintptr_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_KeyID_values_crate_nested_IdentityPublicKey_FFI **)&jarg1; 
  arg2 = (uintptr_t)jarg2; 
  if (arg1) (arg1)->count = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1KeyID_1values_1crate_1nested_1IdentityPublicKey_1FFI_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_crate_nested_KeyID_values_crate_nested_IdentityPublicKey_FFI *arg1 = (std_collections_Map_keys_crate_nested_KeyID_values_crate_nested_IdentityPublicKey_FFI *) 0 ;
  uintptr_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_KeyID_values_crate_nested_IdentityPublicKey_FFI **)&jarg1; 
  result = (uintptr_t) ((arg1)->count);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1KeyID_1values_1crate_1nested_1IdentityPublicKey_1FFI_1keys_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_crate_nested_KeyID_values_crate_nested_IdentityPublicKey_FFI *arg1 = (std_collections_Map_keys_crate_nested_KeyID_values_crate_nested_IdentityPublicKey_FFI *) 0 ;
  KeyID_FFI **arg2 = (KeyID_FFI **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_KeyID_values_crate_nested_IdentityPublicKey_FFI **)&jarg1; 
  arg2 = *(KeyID_FFI ***)&jarg2; 
  if (arg1) (arg1)->keys = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1KeyID_1values_1crate_1nested_1IdentityPublicKey_1FFI_1keys_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_crate_nested_KeyID_values_crate_nested_IdentityPublicKey_FFI *arg1 = (std_collections_Map_keys_crate_nested_KeyID_values_crate_nested_IdentityPublicKey_FFI *) 0 ;
  KeyID_FFI **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_KeyID_values_crate_nested_IdentityPublicKey_FFI **)&jarg1; 
  result = (KeyID_FFI **) ((arg1)->keys);
  *(KeyID_FFI ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1KeyID_1values_1crate_1nested_1IdentityPublicKey_1FFI_1values_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_crate_nested_KeyID_values_crate_nested_IdentityPublicKey_FFI *arg1 = (std_collections_Map_keys_crate_nested_KeyID_values_crate_nested_IdentityPublicKey_FFI *) 0 ;
  IdentityPublicKey_FFI **arg2 = (IdentityPublicKey_FFI **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_KeyID_values_crate_nested_IdentityPublicKey_FFI **)&jarg1; 
  arg2 = *(IdentityPublicKey_FFI ***)&jarg2; 
  if (arg1) (arg1)->values = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1KeyID_1values_1crate_1nested_1IdentityPublicKey_1FFI_1values_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_crate_nested_KeyID_values_crate_nested_IdentityPublicKey_FFI *arg1 = (std_collections_Map_keys_crate_nested_KeyID_values_crate_nested_IdentityPublicKey_FFI *) 0 ;
  IdentityPublicKey_FFI **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_KeyID_values_crate_nested_IdentityPublicKey_FFI **)&jarg1; 
  result = (IdentityPublicKey_FFI **) ((arg1)->values);
  *(IdentityPublicKey_FFI ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1std_1collections_1Map_1keys_1crate_1nested_1KeyID_1values_1crate_1nested_1IdentityPublicKey_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std_collections_Map_keys_crate_nested_KeyID_values_crate_nested_IdentityPublicKey_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (std_collections_Map_keys_crate_nested_KeyID_values_crate_nested_IdentityPublicKey_FFI *)new std_collections_Map_keys_crate_nested_KeyID_values_crate_nested_IdentityPublicKey_FFI();
  *(std_collections_Map_keys_crate_nested_KeyID_values_crate_nested_IdentityPublicKey_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1std_1collections_1Map_1keys_1crate_1nested_1KeyID_1values_1crate_1nested_1IdentityPublicKey_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std_collections_Map_keys_crate_nested_KeyID_values_crate_nested_IdentityPublicKey_FFI *arg1 = (std_collections_Map_keys_crate_nested_KeyID_values_crate_nested_IdentityPublicKey_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std_collections_Map_keys_crate_nested_KeyID_values_crate_nested_IdentityPublicKey_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_Revision_1_10_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  Revision_FFI *arg1 = (Revision_FFI *) 0 ;
  uint64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Revision_FFI **)&jarg1; 
  {
    jclass clazz;
    jmethodID mid;
    jbyteArray ba;
    jbyte* bae;
    jsize sz;
    int i;
    
    if (!jarg2) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "BigInteger null");
      return ;
    }
    clazz = jenv->GetObjectClass(jarg2);
    mid = jenv->GetMethodID(clazz, "toByteArray", "()[B");
    ba = (jbyteArray)jenv->CallObjectMethod(jarg2, mid);
    bae = jenv->GetByteArrayElements(ba, 0);
    sz = jenv->GetArrayLength(ba);
    arg2 = 0;
    if (sz > 0) {
      arg2 = (uint64_t)(signed char)bae[0];
      for(i=1; i<sz; i++) {
        arg2 = (arg2 << 8) | (uint64_t)(unsigned char)bae[i];
      }
    }
    jenv->ReleaseByteArrayElements(ba, bae, 0);
  }
  if (arg1) (arg1)->_0 = arg2;
}


SWIGEXPORT jobject JNICALL Java_org_dash_sdk_exampleJNI_Revision_1_10_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jobject jresult = 0 ;
  Revision_FFI *arg1 = (Revision_FFI *) 0 ;
  uint64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Revision_FFI **)&jarg1; 
  result = (uint64_t) ((arg1)->_0);
  {
    jbyteArray ba = jenv->NewByteArray(9);
    jbyte* bae = jenv->GetByteArrayElements(ba, 0);
    jclass clazz = jenv->FindClass("java/math/BigInteger");
    jmethodID mid = jenv->GetMethodID(clazz, "<init>", "([B)V");
    jobject bigint;
    int i;
    
    bae[0] = 0;
    for(i=1; i<9; i++ ) {
      bae[i] = (jbyte)(result>>8*(8-i));
    }
    
    jenv->ReleaseByteArrayElements(ba, bae, 0);
    bigint = jenv->NewObject(clazz, mid, ba);
    jenv->DeleteLocalRef(ba);
    jresult = bigint;
  }
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1Revision(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Revision_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (Revision_FFI *)new Revision_FFI();
  *(Revision_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1Revision(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Revision_FFI *arg1 = (Revision_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Revision_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_IdentityV0_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  IdentityV0_FFI *arg1 = (IdentityV0_FFI *) 0 ;
  Identifier_FFI *arg2 = (Identifier_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(IdentityV0_FFI **)&jarg1; 
  arg2 = *(Identifier_FFI **)&jarg2; 
  if (arg1) (arg1)->id = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_IdentityV0_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  IdentityV0_FFI *arg1 = (IdentityV0_FFI *) 0 ;
  Identifier_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IdentityV0_FFI **)&jarg1; 
  result = (Identifier_FFI *) ((arg1)->id);
  *(Identifier_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_IdentityV0_1public_1keys_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  IdentityV0_FFI *arg1 = (IdentityV0_FFI *) 0 ;
  std_collections_Map_keys_crate_nested_KeyID_values_crate_nested_IdentityPublicKey_FFI *arg2 = (std_collections_Map_keys_crate_nested_KeyID_values_crate_nested_IdentityPublicKey_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(IdentityV0_FFI **)&jarg1; 
  arg2 = *(std_collections_Map_keys_crate_nested_KeyID_values_crate_nested_IdentityPublicKey_FFI **)&jarg2; 
  if (arg1) (arg1)->public_keys = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_IdentityV0_1public_1keys_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  IdentityV0_FFI *arg1 = (IdentityV0_FFI *) 0 ;
  std_collections_Map_keys_crate_nested_KeyID_values_crate_nested_IdentityPublicKey_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IdentityV0_FFI **)&jarg1; 
  result = (std_collections_Map_keys_crate_nested_KeyID_values_crate_nested_IdentityPublicKey_FFI *) ((arg1)->public_keys);
  *(std_collections_Map_keys_crate_nested_KeyID_values_crate_nested_IdentityPublicKey_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_IdentityV0_1balance_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  IdentityV0_FFI *arg1 = (IdentityV0_FFI *) 0 ;
  uint64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IdentityV0_FFI **)&jarg1; 
  {
    jclass clazz;
    jmethodID mid;
    jbyteArray ba;
    jbyte* bae;
    jsize sz;
    int i;
    
    if (!jarg2) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "BigInteger null");
      return ;
    }
    clazz = jenv->GetObjectClass(jarg2);
    mid = jenv->GetMethodID(clazz, "toByteArray", "()[B");
    ba = (jbyteArray)jenv->CallObjectMethod(jarg2, mid);
    bae = jenv->GetByteArrayElements(ba, 0);
    sz = jenv->GetArrayLength(ba);
    arg2 = 0;
    if (sz > 0) {
      arg2 = (uint64_t)(signed char)bae[0];
      for(i=1; i<sz; i++) {
        arg2 = (arg2 << 8) | (uint64_t)(unsigned char)bae[i];
      }
    }
    jenv->ReleaseByteArrayElements(ba, bae, 0);
  }
  if (arg1) (arg1)->balance = arg2;
}


SWIGEXPORT jobject JNICALL Java_org_dash_sdk_exampleJNI_IdentityV0_1balance_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jobject jresult = 0 ;
  IdentityV0_FFI *arg1 = (IdentityV0_FFI *) 0 ;
  uint64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IdentityV0_FFI **)&jarg1; 
  result = (uint64_t) ((arg1)->balance);
  {
    jbyteArray ba = jenv->NewByteArray(9);
    jbyte* bae = jenv->GetByteArrayElements(ba, 0);
    jclass clazz = jenv->FindClass("java/math/BigInteger");
    jmethodID mid = jenv->GetMethodID(clazz, "<init>", "([B)V");
    jobject bigint;
    int i;
    
    bae[0] = 0;
    for(i=1; i<9; i++ ) {
      bae[i] = (jbyte)(result>>8*(8-i));
    }
    
    jenv->ReleaseByteArrayElements(ba, bae, 0);
    bigint = jenv->NewObject(clazz, mid, ba);
    jenv->DeleteLocalRef(ba);
    jresult = bigint;
  }
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_IdentityV0_1revision_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  IdentityV0_FFI *arg1 = (IdentityV0_FFI *) 0 ;
  Revision_FFI *arg2 = (Revision_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(IdentityV0_FFI **)&jarg1; 
  arg2 = *(Revision_FFI **)&jarg2; 
  if (arg1) (arg1)->revision = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_IdentityV0_1revision_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  IdentityV0_FFI *arg1 = (IdentityV0_FFI *) 0 ;
  Revision_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IdentityV0_FFI **)&jarg1; 
  result = (Revision_FFI *) ((arg1)->revision);
  *(Revision_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_IdentityV0_1getPublicKey(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  IdentityV0_FFI *arg1 = (IdentityV0_FFI *) 0 ;
  uint32_t arg2 ;
  IdentityPublicKeyV0_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IdentityV0_FFI **)&jarg1; 
  arg2 = (uint32_t)jarg2; 
  result = (IdentityPublicKeyV0_FFI *)IdentityV0_FFI_getPublicKey(arg1,arg2);
  *(IdentityPublicKeyV0_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_IdentityV0_1getPublicKeyById(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  IdentityV0_FFI *arg1 = (IdentityV0_FFI *) 0 ;
  uint32_t arg2 ;
  IdentityPublicKeyV0_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IdentityV0_FFI **)&jarg1; 
  arg2 = (uint32_t)jarg2; 
  result = (IdentityPublicKeyV0_FFI *)IdentityV0_FFI_getPublicKeyById(arg1,arg2);
  *(IdentityPublicKeyV0_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1IdentityV0(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  IdentityV0_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (IdentityV0_FFI *)new IdentityV0_FFI();
  *(IdentityV0_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1IdentityV0(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  IdentityV0_FFI *arg1 = (IdentityV0_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(IdentityV0_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_Identity_1tag_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  Identity_FFI *arg1 = (Identity_FFI *) 0 ;
  enum Identity_FFI_Tag arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Identity_FFI **)&jarg1; 
  arg2 = (enum Identity_FFI_Tag)jarg2; 
  if (arg1) (arg1)->tag = arg2;
}


SWIGEXPORT jint JNICALL Java_org_dash_sdk_exampleJNI_Identity_1tag_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  Identity_FFI *arg1 = (Identity_FFI *) 0 ;
  enum Identity_FFI_Tag result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Identity_FFI **)&jarg1; 
  result = (enum Identity_FFI_Tag) ((arg1)->tag);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_Identity_1v0_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  Identity_FFI *arg1 = (Identity_FFI *) 0 ;
  IdentityV0_FFI *arg2 = (IdentityV0_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Identity_FFI **)&jarg1; 
  arg2 = *(IdentityV0_FFI **)&jarg2; 
  if (arg1) (arg1)->v0 = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_Identity_1v0_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Identity_FFI *arg1 = (Identity_FFI *) 0 ;
  IdentityV0_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Identity_FFI **)&jarg1; 
  result = (IdentityV0_FFI *) ((arg1)->v0);
  *(IdentityV0_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1Identity(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Identity_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (Identity_FFI *)new Identity_FFI();
  *(Identity_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1Identity(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Identity_FFI *arg1 = (Identity_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Identity_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1crate_1nested_1HashID_1FFI_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *) 0 ;
  uintptr_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_crate_nested_HashID_FFI **)&jarg1; 
  arg2 = (uintptr_t)jarg2; 
  if (arg1) (arg1)->count = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1crate_1nested_1HashID_1FFI_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *) 0 ;
  uintptr_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_crate_nested_HashID_FFI **)&jarg1; 
  result = (uintptr_t) ((arg1)->count);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1crate_1nested_1HashID_1FFI_1keys_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_crate_nested_HashID_FFI **)&jarg1; 
  arg2 = *(uint32_t **)&jarg2; 
  if (arg1) (arg1)->keys = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1crate_1nested_1HashID_1FFI_1keys_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *) 0 ;
  uint32_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_crate_nested_HashID_FFI **)&jarg1; 
  result = (uint32_t *) ((arg1)->keys);
  *(uint32_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1crate_1nested_1HashID_1FFI_1values_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *) 0 ;
  HashID_FFI **arg2 = (HashID_FFI **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_crate_nested_HashID_FFI **)&jarg1; 
  arg2 = *(HashID_FFI ***)&jarg2; 
  if (arg1) (arg1)->values = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1crate_1nested_1HashID_1FFI_1values_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *) 0 ;
  HashID_FFI **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_crate_nested_HashID_FFI **)&jarg1; 
  result = (HashID_FFI **) ((arg1)->values);
  *(HashID_FFI ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1std_1collections_1Map_1keys_1u32_1values_1crate_1nested_1HashID_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *)new std_collections_Map_keys_u32_values_crate_nested_HashID_FFI();
  *(std_collections_Map_keys_u32_values_crate_nested_HashID_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1std_1collections_1Map_1keys_1u32_1values_1crate_1nested_1HashID_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std_collections_Map_keys_u32_values_crate_nested_HashID_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_MyIdentityFactory_1FFI_1first_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  MyIdentityFactory_FFI *arg1 = (MyIdentityFactory_FFI *) 0 ;
  uint32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MyIdentityFactory_FFI **)&jarg1; 
  arg2 = (uint32_t)jarg2; 
  if (arg1) (arg1)->first = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_MyIdentityFactory_1FFI_1first_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  MyIdentityFactory_FFI *arg1 = (MyIdentityFactory_FFI *) 0 ;
  uint32_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MyIdentityFactory_FFI **)&jarg1; 
  result = (uint32_t) ((arg1)->first);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1MyIdentityFactory_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  MyIdentityFactory_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (MyIdentityFactory_FFI *)new MyIdentityFactory_FFI();
  *(MyIdentityFactory_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1MyIdentityFactory_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  MyIdentityFactory_FFI *arg1 = (MyIdentityFactory_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(MyIdentityFactory_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_IdentityFactory_1VTable_1get_1identity_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  IdentityFactory_VTable *arg1 = (IdentityFactory_VTable *) 0 ;
  Identity_FFI *(*arg2)(void const *,Identifier_FFI *) = (Identity_FFI *(*)(void const *,Identifier_FFI *)) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IdentityFactory_VTable **)&jarg1; 
  arg2 = *(Identity_FFI *(**)(void const *,Identifier_FFI *))&jarg2; 
  if (arg1) (arg1)->get_identity = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_IdentityFactory_1VTable_1get_1identity_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  IdentityFactory_VTable *arg1 = (IdentityFactory_VTable *) 0 ;
  Identity_FFI *(*result)(void const *,Identifier_FFI *) = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IdentityFactory_VTable **)&jarg1; 
  result = (Identity_FFI *(*)(void const *,Identifier_FFI *)) ((arg1)->get_identity);
  *(Identity_FFI *(**)(void const *,Identifier_FFI *))&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1IdentityFactory_1VTable(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  IdentityFactory_VTable *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (IdentityFactory_VTable *)new IdentityFactory_VTable();
  *(IdentityFactory_VTable **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1IdentityFactory_1VTable(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  IdentityFactory_VTable *arg1 = (IdentityFactory_VTable *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(IdentityFactory_VTable **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_IdentityFactory_1TraitObject_1object_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  IdentityFactory_TraitObject *arg1 = (IdentityFactory_TraitObject *) 0 ;
  void *arg2 = (void *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IdentityFactory_TraitObject **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  if (arg1) (arg1)->object = (void const *)arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_IdentityFactory_1TraitObject_1object_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  IdentityFactory_TraitObject *arg1 = (IdentityFactory_TraitObject *) 0 ;
  void *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IdentityFactory_TraitObject **)&jarg1; 
  result = (void *) ((arg1)->object);
  *(void **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_IdentityFactory_1TraitObject_1vtable_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  IdentityFactory_TraitObject *arg1 = (IdentityFactory_TraitObject *) 0 ;
  IdentityFactory_VTable *arg2 = (IdentityFactory_VTable *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(IdentityFactory_TraitObject **)&jarg1; 
  arg2 = *(IdentityFactory_VTable **)&jarg2; 
  if (arg1) (arg1)->vtable = (IdentityFactory_VTable const *)arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_IdentityFactory_1TraitObject_1vtable_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  IdentityFactory_TraitObject *arg1 = (IdentityFactory_TraitObject *) 0 ;
  IdentityFactory_VTable *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IdentityFactory_TraitObject **)&jarg1; 
  result = (IdentityFactory_VTable *) ((arg1)->vtable);
  *(IdentityFactory_VTable **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1IdentityFactory_1TraitObject(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  IdentityFactory_TraitObject *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (IdentityFactory_TraitObject *)new IdentityFactory_TraitObject();
  *(IdentityFactory_TraitObject **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1IdentityFactory_1TraitObject(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  IdentityFactory_TraitObject *arg1 = (IdentityFactory_TraitObject *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(IdentityFactory_TraitObject **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_UnnamedPair_1FFI_1_10_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jbyteArray jarg2) {
  UnnamedPair_FFI *arg1 = (UnnamedPair_FFI *) 0 ;
  uint8_t (*arg2)[32] = (uint8_t (*)[32]) 0 ;
  uint8_t *byteArray2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UnnamedPair_FFI **)&jarg1; 
  {
    //arg2 = (uint8_t (*)[32]) JCALL2(GetByteArrayElements, jenv, jarg2, 0);
    if (!jarg2) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null array");
      return ;
    }
    const jsize sz = jenv->GetArrayLength(jarg2);
    jbyte* const jarr = jenv->GetByteArrayElements(jarg2, 0);
    if (!jarr) return ;
    byteArray2 = (uint8_t *)calloc(1, 32); // this is a memory leak?
    memcpy(byteArray2, jarr, sz);
    jenv->ReleaseByteArrayElements(jarg2, jarr, JNI_ABORT);
    arg2 = (uint8_t (*) [32])byteArray2;
  }
  if (arg1) (arg1)->_0 = (uint8_t (*)[32])arg2;
  {
    //JCALL3(ReleaseByteArrayElements, jenv, jarg2, (jbyte *) *arg2, 0);
  }
  
}


SWIGEXPORT jbyteArray JNICALL Java_org_dash_sdk_exampleJNI_UnnamedPair_1FFI_1_10_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jbyteArray jresult = 0 ;
  UnnamedPair_FFI *arg1 = (UnnamedPair_FFI *) 0 ;
  uint8_t (*result)[32] = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UnnamedPair_FFI **)&jarg1; 
  result = (uint8_t (*)[32]) ((arg1)->_0);
  {
    jresult = jenv->NewByteArray(32);
    jenv->SetByteArrayRegion(jresult, 0, 32, (jbyte *)(*result));
  }
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_UnnamedPair_1FFI_1_11_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  UnnamedPair_FFI *arg1 = (UnnamedPair_FFI *) 0 ;
  uint32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UnnamedPair_FFI **)&jarg1; 
  arg2 = (uint32_t)jarg2; 
  if (arg1) (arg1)->_1 = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_UnnamedPair_1FFI_1_11_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  UnnamedPair_FFI *arg1 = (UnnamedPair_FFI *) 0 ;
  uint32_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UnnamedPair_FFI **)&jarg1; 
  result = (uint32_t) ((arg1)->_1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1UnnamedPair_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  UnnamedPair_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (UnnamedPair_FFI *)new UnnamedPair_FFI();
  *(UnnamedPair_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1UnnamedPair_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  UnnamedPair_FFI *arg1 = (UnnamedPair_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(UnnamedPair_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_Vec_1u32_1FFI_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  Vec_u32_FFI *arg1 = (Vec_u32_FFI *) 0 ;
  uintptr_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vec_u32_FFI **)&jarg1; 
  arg2 = (uintptr_t)jarg2; 
  if (arg1) (arg1)->count = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_Vec_1u32_1FFI_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Vec_u32_FFI *arg1 = (Vec_u32_FFI *) 0 ;
  uintptr_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vec_u32_FFI **)&jarg1; 
  result = (uintptr_t) ((arg1)->count);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_Vec_1u32_1FFI_1values_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  Vec_u32_FFI *arg1 = (Vec_u32_FFI *) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vec_u32_FFI **)&jarg1; 
  arg2 = *(uint32_t **)&jarg2; 
  if (arg1) (arg1)->values = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_Vec_1u32_1FFI_1values_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Vec_u32_FFI *arg1 = (Vec_u32_FFI *) 0 ;
  uint32_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vec_u32_FFI **)&jarg1; 
  result = (uint32_t *) ((arg1)->values);
  *(uint32_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1Vec_1u32_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Vec_u32_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (Vec_u32_FFI *)new Vec_u32_FFI();
  *(Vec_u32_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1Vec_1u32_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Vec_u32_FFI *arg1 = (Vec_u32_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Vec_u32_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_SimpleData_1FFI_1_10_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  SimpleData_FFI *arg1 = (SimpleData_FFI *) 0 ;
  Vec_u32_FFI *arg2 = (Vec_u32_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(SimpleData_FFI **)&jarg1; 
  arg2 = *(Vec_u32_FFI **)&jarg2; 
  if (arg1) (arg1)->_0 = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_SimpleData_1FFI_1_10_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SimpleData_FFI *arg1 = (SimpleData_FFI *) 0 ;
  Vec_u32_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SimpleData_FFI **)&jarg1; 
  result = (Vec_u32_FFI *) ((arg1)->_0);
  *(Vec_u32_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1SimpleData_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SimpleData_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (SimpleData_FFI *)new SimpleData_FFI();
  *(SimpleData_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1SimpleData_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SimpleData_FFI *arg1 = (SimpleData_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SimpleData_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_Vec_1bool_1FFI_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  Vec_bool_FFI *arg1 = (Vec_bool_FFI *) 0 ;
  uintptr_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vec_bool_FFI **)&jarg1; 
  arg2 = (uintptr_t)jarg2; 
  if (arg1) (arg1)->count = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_Vec_1bool_1FFI_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Vec_bool_FFI *arg1 = (Vec_bool_FFI *) 0 ;
  uintptr_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vec_bool_FFI **)&jarg1; 
  result = (uintptr_t) ((arg1)->count);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_Vec_1bool_1FFI_1values_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  Vec_bool_FFI *arg1 = (Vec_bool_FFI *) 0 ;
  bool *arg2 = (bool *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vec_bool_FFI **)&jarg1; 
  arg2 = *(bool **)&jarg2; 
  if (arg1) (arg1)->values = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_Vec_1bool_1FFI_1values_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Vec_bool_FFI *arg1 = (Vec_bool_FFI *) 0 ;
  bool *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vec_bool_FFI **)&jarg1; 
  result = (bool *) ((arg1)->values);
  *(bool **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1Vec_1bool_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Vec_bool_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (Vec_bool_FFI *)new Vec_bool_FFI();
  *(Vec_bool_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1Vec_1bool_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Vec_bool_FFI *arg1 = (Vec_bool_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Vec_bool_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_UsedKeyMatrix_1FFI_1_10_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  UsedKeyMatrix_FFI *arg1 = (UsedKeyMatrix_FFI *) 0 ;
  Vec_bool_FFI *arg2 = (Vec_bool_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(UsedKeyMatrix_FFI **)&jarg1; 
  arg2 = *(Vec_bool_FFI **)&jarg2; 
  if (arg1) (arg1)->_0 = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_UsedKeyMatrix_1FFI_1_10_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  UsedKeyMatrix_FFI *arg1 = (UsedKeyMatrix_FFI *) 0 ;
  Vec_bool_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UsedKeyMatrix_FFI **)&jarg1; 
  result = (Vec_bool_FFI *) ((arg1)->_0);
  *(Vec_bool_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1UsedKeyMatrix_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  UsedKeyMatrix_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (UsedKeyMatrix_FFI *)new UsedKeyMatrix_FFI();
  *(UsedKeyMatrix_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1UsedKeyMatrix_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  UsedKeyMatrix_FFI *arg1 = (UsedKeyMatrix_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(UsedKeyMatrix_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1String_1values_1crate_1nested_1HashID_1FFI_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_String_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_String_values_crate_nested_HashID_FFI *) 0 ;
  uintptr_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_String_values_crate_nested_HashID_FFI **)&jarg1; 
  arg2 = (uintptr_t)jarg2; 
  if (arg1) (arg1)->count = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1String_1values_1crate_1nested_1HashID_1FFI_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_String_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_String_values_crate_nested_HashID_FFI *) 0 ;
  uintptr_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_String_values_crate_nested_HashID_FFI **)&jarg1; 
  result = (uintptr_t) ((arg1)->count);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1String_1values_1crate_1nested_1HashID_1FFI_1keys_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_String_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_String_values_crate_nested_HashID_FFI *) 0 ;
  char **arg2 = (char **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_String_values_crate_nested_HashID_FFI **)&jarg1; 
  arg2 = *(char ***)&jarg2; 
  if (arg1) (arg1)->keys = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1String_1values_1crate_1nested_1HashID_1FFI_1keys_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_String_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_String_values_crate_nested_HashID_FFI *) 0 ;
  char **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_String_values_crate_nested_HashID_FFI **)&jarg1; 
  result = (char **) ((arg1)->keys);
  *(char ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1String_1values_1crate_1nested_1HashID_1FFI_1values_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_String_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_String_values_crate_nested_HashID_FFI *) 0 ;
  HashID_FFI **arg2 = (HashID_FFI **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_String_values_crate_nested_HashID_FFI **)&jarg1; 
  arg2 = *(HashID_FFI ***)&jarg2; 
  if (arg1) (arg1)->values = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1String_1values_1crate_1nested_1HashID_1FFI_1values_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_String_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_String_values_crate_nested_HashID_FFI *) 0 ;
  HashID_FFI **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_String_values_crate_nested_HashID_FFI **)&jarg1; 
  result = (HashID_FFI **) ((arg1)->values);
  *(HashID_FFI ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1std_1collections_1Map_1keys_1String_1values_1crate_1nested_1HashID_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std_collections_Map_keys_String_values_crate_nested_HashID_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (std_collections_Map_keys_String_values_crate_nested_HashID_FFI *)new std_collections_Map_keys_String_values_crate_nested_HashID_FFI();
  *(std_collections_Map_keys_String_values_crate_nested_HashID_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1std_1collections_1Map_1keys_1String_1values_1crate_1nested_1HashID_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std_collections_Map_keys_String_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_String_values_crate_nested_HashID_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std_collections_Map_keys_String_values_crate_nested_HashID_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_TestEnum_1FFI_1Variant3_1Body_1_10_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  TestEnum_FFI_Variant3_Body *arg1 = (TestEnum_FFI_Variant3_Body *) 0 ;
  HashID_FFI *arg2 = (HashID_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(TestEnum_FFI_Variant3_Body **)&jarg1; 
  arg2 = *(HashID_FFI **)&jarg2; 
  if (arg1) (arg1)->_0 = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_TestEnum_1FFI_1Variant3_1Body_1_10_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  TestEnum_FFI_Variant3_Body *arg1 = (TestEnum_FFI_Variant3_Body *) 0 ;
  HashID_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestEnum_FFI_Variant3_Body **)&jarg1; 
  result = (HashID_FFI *) ((arg1)->_0);
  *(HashID_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_TestEnum_1FFI_1Variant3_1Body_1_11_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  TestEnum_FFI_Variant3_Body *arg1 = (TestEnum_FFI_Variant3_Body *) 0 ;
  uint32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestEnum_FFI_Variant3_Body **)&jarg1; 
  arg2 = (uint32_t)jarg2; 
  if (arg1) (arg1)->_1 = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_TestEnum_1FFI_1Variant3_1Body_1_11_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  TestEnum_FFI_Variant3_Body *arg1 = (TestEnum_FFI_Variant3_Body *) 0 ;
  uint32_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestEnum_FFI_Variant3_Body **)&jarg1; 
  result = (uint32_t) ((arg1)->_1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1TestEnum_1FFI_1Variant3_1Body(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  TestEnum_FFI_Variant3_Body *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (TestEnum_FFI_Variant3_Body *)new TestEnum_FFI_Variant3_Body();
  *(TestEnum_FFI_Variant3_Body **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1TestEnum_1FFI_1Variant3_1Body(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  TestEnum_FFI_Variant3_Body *arg1 = (TestEnum_FFI_Variant3_Body *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(TestEnum_FFI_Variant3_Body **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_TestEnum_1FFI_1Variant4_1Body_1_10_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  TestEnum_FFI_Variant4_Body *arg1 = (TestEnum_FFI_Variant4_Body *) 0 ;
  HashID_FFI *arg2 = (HashID_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(TestEnum_FFI_Variant4_Body **)&jarg1; 
  arg2 = *(HashID_FFI **)&jarg2; 
  if (arg1) (arg1)->_0 = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_TestEnum_1FFI_1Variant4_1Body_1_10_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  TestEnum_FFI_Variant4_Body *arg1 = (TestEnum_FFI_Variant4_Body *) 0 ;
  HashID_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestEnum_FFI_Variant4_Body **)&jarg1; 
  result = (HashID_FFI *) ((arg1)->_0);
  *(HashID_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_TestEnum_1FFI_1Variant4_1Body_1_11_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  TestEnum_FFI_Variant4_Body *arg1 = (TestEnum_FFI_Variant4_Body *) 0 ;
  uint32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestEnum_FFI_Variant4_Body **)&jarg1; 
  arg2 = (uint32_t)jarg2; 
  if (arg1) (arg1)->_1 = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_TestEnum_1FFI_1Variant4_1Body_1_11_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  TestEnum_FFI_Variant4_Body *arg1 = (TestEnum_FFI_Variant4_Body *) 0 ;
  uint32_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestEnum_FFI_Variant4_Body **)&jarg1; 
  result = (uint32_t) ((arg1)->_1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_TestEnum_1FFI_1Variant4_1Body_1_12_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  TestEnum_FFI_Variant4_Body *arg1 = (TestEnum_FFI_Variant4_Body *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestEnum_FFI_Variant4_Body **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    delete [] arg1->_2;
    if (arg2) {
      arg1->_2 = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->_2, (const char *)arg2);
    } else {
      arg1->_2 = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_dash_sdk_exampleJNI_TestEnum_1FFI_1Variant4_1Body_1_12_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  TestEnum_FFI_Variant4_Body *arg1 = (TestEnum_FFI_Variant4_Body *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestEnum_FFI_Variant4_Body **)&jarg1; 
  result = (char *) ((arg1)->_2);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1TestEnum_1FFI_1Variant4_1Body(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  TestEnum_FFI_Variant4_Body *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (TestEnum_FFI_Variant4_Body *)new TestEnum_FFI_Variant4_Body();
  *(TestEnum_FFI_Variant4_Body **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1TestEnum_1FFI_1Variant4_1Body(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  TestEnum_FFI_Variant4_Body *arg1 = (TestEnum_FFI_Variant4_Body *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(TestEnum_FFI_Variant4_Body **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_TestEnum_1FFI_1Variant5_1Body_1_10_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  TestEnum_FFI_Variant5_Body *arg1 = (TestEnum_FFI_Variant5_Body *) 0 ;
  std_collections_Map_keys_String_values_crate_nested_HashID_FFI *arg2 = (std_collections_Map_keys_String_values_crate_nested_HashID_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(TestEnum_FFI_Variant5_Body **)&jarg1; 
  arg2 = *(std_collections_Map_keys_String_values_crate_nested_HashID_FFI **)&jarg2; 
  if (arg1) (arg1)->_0 = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_TestEnum_1FFI_1Variant5_1Body_1_10_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  TestEnum_FFI_Variant5_Body *arg1 = (TestEnum_FFI_Variant5_Body *) 0 ;
  std_collections_Map_keys_String_values_crate_nested_HashID_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestEnum_FFI_Variant5_Body **)&jarg1; 
  result = (std_collections_Map_keys_String_values_crate_nested_HashID_FFI *) ((arg1)->_0);
  *(std_collections_Map_keys_String_values_crate_nested_HashID_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_TestEnum_1FFI_1Variant5_1Body_1_11_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  TestEnum_FFI_Variant5_Body *arg1 = (TestEnum_FFI_Variant5_Body *) 0 ;
  uint32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestEnum_FFI_Variant5_Body **)&jarg1; 
  arg2 = (uint32_t)jarg2; 
  if (arg1) (arg1)->_1 = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_TestEnum_1FFI_1Variant5_1Body_1_11_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  TestEnum_FFI_Variant5_Body *arg1 = (TestEnum_FFI_Variant5_Body *) 0 ;
  uint32_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestEnum_FFI_Variant5_Body **)&jarg1; 
  result = (uint32_t) ((arg1)->_1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_TestEnum_1FFI_1Variant5_1Body_1_12_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  TestEnum_FFI_Variant5_Body *arg1 = (TestEnum_FFI_Variant5_Body *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestEnum_FFI_Variant5_Body **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    delete [] arg1->_2;
    if (arg2) {
      arg1->_2 = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->_2, (const char *)arg2);
    } else {
      arg1->_2 = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_dash_sdk_exampleJNI_TestEnum_1FFI_1Variant5_1Body_1_12_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  TestEnum_FFI_Variant5_Body *arg1 = (TestEnum_FFI_Variant5_Body *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestEnum_FFI_Variant5_Body **)&jarg1; 
  result = (char *) ((arg1)->_2);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1TestEnum_1FFI_1Variant5_1Body(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  TestEnum_FFI_Variant5_Body *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (TestEnum_FFI_Variant5_Body *)new TestEnum_FFI_Variant5_Body();
  *(TestEnum_FFI_Variant5_Body **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1TestEnum_1FFI_1Variant5_1Body(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  TestEnum_FFI_Variant5_Body *arg1 = (TestEnum_FFI_Variant5_Body *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(TestEnum_FFI_Variant5_Body **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_TestEnum_1FFI_1tag_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  TestEnum_FFI *arg1 = (TestEnum_FFI *) 0 ;
  enum TestEnum_FFI_Tag arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestEnum_FFI **)&jarg1; 
  arg2 = (enum TestEnum_FFI_Tag)jarg2; 
  if (arg1) (arg1)->tag = arg2;
}


SWIGEXPORT jint JNICALL Java_org_dash_sdk_exampleJNI_TestEnum_1FFI_1tag_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  TestEnum_FFI *arg1 = (TestEnum_FFI *) 0 ;
  enum TestEnum_FFI_Tag result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestEnum_FFI **)&jarg1; 
  result = (enum TestEnum_FFI_Tag) ((arg1)->tag);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_TestEnum_1FFI_1variant1_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  TestEnum_FFI *arg1 = (TestEnum_FFI *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestEnum_FFI **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    delete [] arg1->variant1;
    if (arg2) {
      arg1->variant1 = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->variant1, (const char *)arg2);
    } else {
      arg1->variant1 = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_dash_sdk_exampleJNI_TestEnum_1FFI_1variant1_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  TestEnum_FFI *arg1 = (TestEnum_FFI *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestEnum_FFI **)&jarg1; 
  result = (char *) ((arg1)->variant1);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_TestEnum_1FFI_1variant3_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  TestEnum_FFI *arg1 = (TestEnum_FFI *) 0 ;
  TestEnum_FFI_Variant3_Body *arg2 = (TestEnum_FFI_Variant3_Body *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(TestEnum_FFI **)&jarg1; 
  arg2 = *(TestEnum_FFI_Variant3_Body **)&jarg2; 
  if (arg1) (arg1)->variant3 = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_TestEnum_1FFI_1variant3_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  TestEnum_FFI *arg1 = (TestEnum_FFI *) 0 ;
  TestEnum_FFI_Variant3_Body *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestEnum_FFI **)&jarg1; 
  result = (TestEnum_FFI_Variant3_Body *)& ((arg1)->variant3);
  *(TestEnum_FFI_Variant3_Body **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_TestEnum_1FFI_1variant4_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  TestEnum_FFI *arg1 = (TestEnum_FFI *) 0 ;
  TestEnum_FFI_Variant4_Body *arg2 = (TestEnum_FFI_Variant4_Body *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(TestEnum_FFI **)&jarg1; 
  arg2 = *(TestEnum_FFI_Variant4_Body **)&jarg2; 
  if (arg1) (arg1)->variant4 = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_TestEnum_1FFI_1variant4_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  TestEnum_FFI *arg1 = (TestEnum_FFI *) 0 ;
  TestEnum_FFI_Variant4_Body *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestEnum_FFI **)&jarg1; 
  result = (TestEnum_FFI_Variant4_Body *)& ((arg1)->variant4);
  *(TestEnum_FFI_Variant4_Body **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_TestEnum_1FFI_1variant5_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  TestEnum_FFI *arg1 = (TestEnum_FFI *) 0 ;
  TestEnum_FFI_Variant5_Body *arg2 = (TestEnum_FFI_Variant5_Body *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(TestEnum_FFI **)&jarg1; 
  arg2 = *(TestEnum_FFI_Variant5_Body **)&jarg2; 
  if (arg1) (arg1)->variant5 = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_TestEnum_1FFI_1variant5_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  TestEnum_FFI *arg1 = (TestEnum_FFI *) 0 ;
  TestEnum_FFI_Variant5_Body *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestEnum_FFI **)&jarg1; 
  result = (TestEnum_FFI_Variant5_Body *)& ((arg1)->variant5);
  *(TestEnum_FFI_Variant5_Body **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1TestEnum_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  TestEnum_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (TestEnum_FFI *)new TestEnum_FFI();
  *(TestEnum_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1TestEnum_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  TestEnum_FFI *arg1 = (TestEnum_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(TestEnum_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_Vec_1Vec_1u32_1FFI_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  Vec_Vec_u32_FFI *arg1 = (Vec_Vec_u32_FFI *) 0 ;
  uintptr_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vec_Vec_u32_FFI **)&jarg1; 
  arg2 = (uintptr_t)jarg2; 
  if (arg1) (arg1)->count = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_Vec_1Vec_1u32_1FFI_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Vec_Vec_u32_FFI *arg1 = (Vec_Vec_u32_FFI *) 0 ;
  uintptr_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vec_Vec_u32_FFI **)&jarg1; 
  result = (uintptr_t) ((arg1)->count);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_Vec_1Vec_1u32_1FFI_1values_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  Vec_Vec_u32_FFI *arg1 = (Vec_Vec_u32_FFI *) 0 ;
  Vec_u32_FFI **arg2 = (Vec_u32_FFI **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vec_Vec_u32_FFI **)&jarg1; 
  arg2 = *(Vec_u32_FFI ***)&jarg2; 
  if (arg1) (arg1)->values = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_Vec_1Vec_1u32_1FFI_1values_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Vec_Vec_u32_FFI *arg1 = (Vec_Vec_u32_FFI *) 0 ;
  Vec_u32_FFI **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vec_Vec_u32_FFI **)&jarg1; 
  result = (Vec_u32_FFI **) ((arg1)->values);
  *(Vec_u32_FFI ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1Vec_1Vec_1u32_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Vec_Vec_u32_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (Vec_Vec_u32_FFI *)new Vec_Vec_u32_FFI();
  *(Vec_Vec_u32_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1Vec_1Vec_1u32_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Vec_Vec_u32_FFI *arg1 = (Vec_Vec_u32_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Vec_Vec_u32_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1u32_1FFI_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_u32_values_u32_FFI *arg1 = (std_collections_Map_keys_u32_values_u32_FFI *) 0 ;
  uintptr_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_u32_FFI **)&jarg1; 
  arg2 = (uintptr_t)jarg2; 
  if (arg1) (arg1)->count = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1u32_1FFI_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_u32_values_u32_FFI *arg1 = (std_collections_Map_keys_u32_values_u32_FFI *) 0 ;
  uintptr_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_u32_FFI **)&jarg1; 
  result = (uintptr_t) ((arg1)->count);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1u32_1FFI_1keys_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_u32_values_u32_FFI *arg1 = (std_collections_Map_keys_u32_values_u32_FFI *) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_u32_FFI **)&jarg1; 
  arg2 = *(uint32_t **)&jarg2; 
  if (arg1) (arg1)->keys = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1u32_1FFI_1keys_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_u32_values_u32_FFI *arg1 = (std_collections_Map_keys_u32_values_u32_FFI *) 0 ;
  uint32_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_u32_FFI **)&jarg1; 
  result = (uint32_t *) ((arg1)->keys);
  *(uint32_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1u32_1FFI_1values_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_u32_values_u32_FFI *arg1 = (std_collections_Map_keys_u32_values_u32_FFI *) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_u32_FFI **)&jarg1; 
  arg2 = *(uint32_t **)&jarg2; 
  if (arg1) (arg1)->values = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1u32_1FFI_1values_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_u32_values_u32_FFI *arg1 = (std_collections_Map_keys_u32_values_u32_FFI *) 0 ;
  uint32_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_u32_FFI **)&jarg1; 
  result = (uint32_t *) ((arg1)->values);
  *(uint32_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1std_1collections_1Map_1keys_1u32_1values_1u32_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std_collections_Map_keys_u32_values_u32_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (std_collections_Map_keys_u32_values_u32_FFI *)new std_collections_Map_keys_u32_values_u32_FFI();
  *(std_collections_Map_keys_u32_values_u32_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1std_1collections_1Map_1keys_1u32_1values_1u32_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std_collections_Map_keys_u32_values_u32_FFI *arg1 = (std_collections_Map_keys_u32_values_u32_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std_collections_Map_keys_u32_values_u32_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1Vec_1u32_1FFI_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_u32_values_Vec_u32_FFI *arg1 = (std_collections_Map_keys_u32_values_Vec_u32_FFI *) 0 ;
  uintptr_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_Vec_u32_FFI **)&jarg1; 
  arg2 = (uintptr_t)jarg2; 
  if (arg1) (arg1)->count = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1Vec_1u32_1FFI_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_u32_values_Vec_u32_FFI *arg1 = (std_collections_Map_keys_u32_values_Vec_u32_FFI *) 0 ;
  uintptr_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_Vec_u32_FFI **)&jarg1; 
  result = (uintptr_t) ((arg1)->count);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1Vec_1u32_1FFI_1keys_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_u32_values_Vec_u32_FFI *arg1 = (std_collections_Map_keys_u32_values_Vec_u32_FFI *) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_Vec_u32_FFI **)&jarg1; 
  arg2 = *(uint32_t **)&jarg2; 
  if (arg1) (arg1)->keys = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1Vec_1u32_1FFI_1keys_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_u32_values_Vec_u32_FFI *arg1 = (std_collections_Map_keys_u32_values_Vec_u32_FFI *) 0 ;
  uint32_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_Vec_u32_FFI **)&jarg1; 
  result = (uint32_t *) ((arg1)->keys);
  *(uint32_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1Vec_1u32_1FFI_1values_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_u32_values_Vec_u32_FFI *arg1 = (std_collections_Map_keys_u32_values_Vec_u32_FFI *) 0 ;
  Vec_u32_FFI **arg2 = (Vec_u32_FFI **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_Vec_u32_FFI **)&jarg1; 
  arg2 = *(Vec_u32_FFI ***)&jarg2; 
  if (arg1) (arg1)->values = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1Vec_1u32_1FFI_1values_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_u32_values_Vec_u32_FFI *arg1 = (std_collections_Map_keys_u32_values_Vec_u32_FFI *) 0 ;
  Vec_u32_FFI **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_Vec_u32_FFI **)&jarg1; 
  result = (Vec_u32_FFI **) ((arg1)->values);
  *(Vec_u32_FFI ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1std_1collections_1Map_1keys_1u32_1values_1Vec_1u32_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std_collections_Map_keys_u32_values_Vec_u32_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (std_collections_Map_keys_u32_values_Vec_u32_FFI *)new std_collections_Map_keys_u32_values_Vec_u32_FFI();
  *(std_collections_Map_keys_u32_values_Vec_u32_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1std_1collections_1Map_1keys_1u32_1values_1Vec_1u32_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std_collections_Map_keys_u32_values_Vec_u32_FFI *arg1 = (std_collections_Map_keys_u32_values_Vec_u32_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std_collections_Map_keys_u32_values_Vec_u32_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1Vec_1crate_1nested_1HashID_1FFI_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *) 0 ;
  uintptr_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **)&jarg1; 
  arg2 = (uintptr_t)jarg2; 
  if (arg1) (arg1)->count = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1Vec_1crate_1nested_1HashID_1FFI_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *) 0 ;
  uintptr_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **)&jarg1; 
  result = (uintptr_t) ((arg1)->count);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1Vec_1crate_1nested_1HashID_1FFI_1keys_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **)&jarg1; 
  arg2 = *(uint32_t **)&jarg2; 
  if (arg1) (arg1)->keys = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1Vec_1crate_1nested_1HashID_1FFI_1keys_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *) 0 ;
  uint32_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **)&jarg1; 
  result = (uint32_t *) ((arg1)->keys);
  *(uint32_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1Vec_1crate_1nested_1HashID_1FFI_1values_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *) 0 ;
  Vec_crate_nested_HashID_FFI **arg2 = (Vec_crate_nested_HashID_FFI **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **)&jarg1; 
  arg2 = *(Vec_crate_nested_HashID_FFI ***)&jarg2; 
  if (arg1) (arg1)->values = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1Vec_1crate_1nested_1HashID_1FFI_1values_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *) 0 ;
  Vec_crate_nested_HashID_FFI **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **)&jarg1; 
  result = (Vec_crate_nested_HashID_FFI **) ((arg1)->values);
  *(Vec_crate_nested_HashID_FFI ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1std_1collections_1Map_1keys_1u32_1values_1Vec_1crate_1nested_1HashID_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *)new std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI();
  *(std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1std_1collections_1Map_1keys_1u32_1values_1Vec_1crate_1nested_1HashID_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1u32_1values_1u32_1FFI_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_u32_FFI *arg1 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_u32_FFI *) 0 ;
  uintptr_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_u32_FFI **)&jarg1; 
  arg2 = (uintptr_t)jarg2; 
  if (arg1) (arg1)->count = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1u32_1values_1u32_1FFI_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_u32_FFI *arg1 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_u32_FFI *) 0 ;
  uintptr_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_u32_FFI **)&jarg1; 
  result = (uintptr_t) ((arg1)->count);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1u32_1values_1u32_1FFI_1keys_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_u32_FFI *arg1 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_u32_FFI *) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_u32_FFI **)&jarg1; 
  arg2 = *(uint32_t **)&jarg2; 
  if (arg1) (arg1)->keys = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1u32_1values_1u32_1FFI_1keys_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_u32_FFI *arg1 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_u32_FFI *) 0 ;
  uint32_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_u32_FFI **)&jarg1; 
  result = (uint32_t *) ((arg1)->keys);
  *(uint32_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1u32_1values_1u32_1FFI_1values_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_u32_FFI *arg1 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_u32_FFI *) 0 ;
  std_collections_Map_keys_u32_values_u32_FFI **arg2 = (std_collections_Map_keys_u32_values_u32_FFI **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_u32_FFI **)&jarg1; 
  arg2 = *(std_collections_Map_keys_u32_values_u32_FFI ***)&jarg2; 
  if (arg1) (arg1)->values = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1u32_1values_1u32_1FFI_1values_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_u32_FFI *arg1 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_u32_FFI *) 0 ;
  std_collections_Map_keys_u32_values_u32_FFI **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_u32_FFI **)&jarg1; 
  result = (std_collections_Map_keys_u32_values_u32_FFI **) ((arg1)->values);
  *(std_collections_Map_keys_u32_values_u32_FFI ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1u32_1values_1u32_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_u32_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_u32_FFI *)new std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_u32_FFI();
  *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_u32_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1u32_1values_1u32_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_u32_FFI *arg1 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_u32_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_u32_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1u32_1values_1crate_1nested_1HashID_1FFI_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *) 0 ;
  uintptr_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_crate_nested_HashID_FFI **)&jarg1; 
  arg2 = (uintptr_t)jarg2; 
  if (arg1) (arg1)->count = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1u32_1values_1crate_1nested_1HashID_1FFI_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *) 0 ;
  uintptr_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_crate_nested_HashID_FFI **)&jarg1; 
  result = (uintptr_t) ((arg1)->count);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1u32_1values_1crate_1nested_1HashID_1FFI_1keys_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_crate_nested_HashID_FFI **)&jarg1; 
  arg2 = *(uint32_t **)&jarg2; 
  if (arg1) (arg1)->keys = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1u32_1values_1crate_1nested_1HashID_1FFI_1keys_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *) 0 ;
  uint32_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_crate_nested_HashID_FFI **)&jarg1; 
  result = (uint32_t *) ((arg1)->keys);
  *(uint32_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1u32_1values_1crate_1nested_1HashID_1FFI_1values_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *) 0 ;
  std_collections_Map_keys_u32_values_crate_nested_HashID_FFI **arg2 = (std_collections_Map_keys_u32_values_crate_nested_HashID_FFI **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_crate_nested_HashID_FFI **)&jarg1; 
  arg2 = *(std_collections_Map_keys_u32_values_crate_nested_HashID_FFI ***)&jarg2; 
  if (arg1) (arg1)->values = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1u32_1values_1crate_1nested_1HashID_1FFI_1values_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *) 0 ;
  std_collections_Map_keys_u32_values_crate_nested_HashID_FFI **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_crate_nested_HashID_FFI **)&jarg1; 
  result = (std_collections_Map_keys_u32_values_crate_nested_HashID_FFI **) ((arg1)->values);
  *(std_collections_Map_keys_u32_values_crate_nested_HashID_FFI ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1u32_1values_1crate_1nested_1HashID_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *)new std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_crate_nested_HashID_FFI();
  *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_crate_nested_HashID_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1u32_1values_1crate_1nested_1HashID_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_crate_nested_HashID_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1u32_1values_1Vec_1u32_1FFI_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *arg1 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *) 0 ;
  uintptr_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_u32_FFI **)&jarg1; 
  arg2 = (uintptr_t)jarg2; 
  if (arg1) (arg1)->count = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1u32_1values_1Vec_1u32_1FFI_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *arg1 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *) 0 ;
  uintptr_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_u32_FFI **)&jarg1; 
  result = (uintptr_t) ((arg1)->count);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1u32_1values_1Vec_1u32_1FFI_1keys_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *arg1 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_u32_FFI **)&jarg1; 
  arg2 = *(uint32_t **)&jarg2; 
  if (arg1) (arg1)->keys = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1u32_1values_1Vec_1u32_1FFI_1keys_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *arg1 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *) 0 ;
  uint32_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_u32_FFI **)&jarg1; 
  result = (uint32_t *) ((arg1)->keys);
  *(uint32_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1u32_1values_1Vec_1u32_1FFI_1values_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *arg1 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *) 0 ;
  std_collections_Map_keys_u32_values_Vec_u32_FFI **arg2 = (std_collections_Map_keys_u32_values_Vec_u32_FFI **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_u32_FFI **)&jarg1; 
  arg2 = *(std_collections_Map_keys_u32_values_Vec_u32_FFI ***)&jarg2; 
  if (arg1) (arg1)->values = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1u32_1values_1Vec_1u32_1FFI_1values_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *arg1 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *) 0 ;
  std_collections_Map_keys_u32_values_Vec_u32_FFI **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_u32_FFI **)&jarg1; 
  result = (std_collections_Map_keys_u32_values_Vec_u32_FFI **) ((arg1)->values);
  *(std_collections_Map_keys_u32_values_Vec_u32_FFI ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1u32_1values_1Vec_1u32_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *)new std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_u32_FFI();
  *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_u32_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1u32_1values_1Vec_1u32_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *arg1 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_u32_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1u32_1values_1Vec_1crate_1nested_1HashID_1FFI_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *) 0 ;
  uintptr_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **)&jarg1; 
  arg2 = (uintptr_t)jarg2; 
  if (arg1) (arg1)->count = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1u32_1values_1Vec_1crate_1nested_1HashID_1FFI_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *) 0 ;
  uintptr_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **)&jarg1; 
  result = (uintptr_t) ((arg1)->count);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1u32_1values_1Vec_1crate_1nested_1HashID_1FFI_1keys_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **)&jarg1; 
  arg2 = *(uint32_t **)&jarg2; 
  if (arg1) (arg1)->keys = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1u32_1values_1Vec_1crate_1nested_1HashID_1FFI_1keys_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *) 0 ;
  uint32_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **)&jarg1; 
  result = (uint32_t *) ((arg1)->keys);
  *(uint32_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1u32_1values_1Vec_1crate_1nested_1HashID_1FFI_1values_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *) 0 ;
  std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **arg2 = (std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **)&jarg1; 
  arg2 = *(std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI ***)&jarg2; 
  if (arg1) (arg1)->values = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1u32_1values_1Vec_1crate_1nested_1HashID_1FFI_1values_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *) 0 ;
  std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **)&jarg1; 
  result = (std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **) ((arg1)->values);
  *(std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1u32_1values_1Vec_1crate_1nested_1HashID_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *)new std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI();
  *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1u32_1values_1Vec_1crate_1nested_1HashID_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1u32_1FFI_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_crate_nested_HashID_values_u32_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_u32_FFI *) 0 ;
  uintptr_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_u32_FFI **)&jarg1; 
  arg2 = (uintptr_t)jarg2; 
  if (arg1) (arg1)->count = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1u32_1FFI_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_u32_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_u32_FFI *) 0 ;
  uintptr_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_u32_FFI **)&jarg1; 
  result = (uintptr_t) ((arg1)->count);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1u32_1FFI_1keys_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_crate_nested_HashID_values_u32_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_u32_FFI *) 0 ;
  HashID_FFI **arg2 = (HashID_FFI **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_u32_FFI **)&jarg1; 
  arg2 = *(HashID_FFI ***)&jarg2; 
  if (arg1) (arg1)->keys = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1u32_1FFI_1keys_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_u32_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_u32_FFI *) 0 ;
  HashID_FFI **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_u32_FFI **)&jarg1; 
  result = (HashID_FFI **) ((arg1)->keys);
  *(HashID_FFI ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1u32_1FFI_1values_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_crate_nested_HashID_values_u32_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_u32_FFI *) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_u32_FFI **)&jarg1; 
  arg2 = *(uint32_t **)&jarg2; 
  if (arg1) (arg1)->values = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1u32_1FFI_1values_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_u32_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_u32_FFI *) 0 ;
  uint32_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_u32_FFI **)&jarg1; 
  result = (uint32_t *) ((arg1)->values);
  *(uint32_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1u32_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_u32_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (std_collections_Map_keys_crate_nested_HashID_values_u32_FFI *)new std_collections_Map_keys_crate_nested_HashID_values_u32_FFI();
  *(std_collections_Map_keys_crate_nested_HashID_values_u32_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1u32_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std_collections_Map_keys_crate_nested_HashID_values_u32_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_u32_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_u32_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1Vec_1u32_1FFI_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_crate_nested_HashID_values_Vec_u32_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_Vec_u32_FFI *) 0 ;
  uintptr_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_Vec_u32_FFI **)&jarg1; 
  arg2 = (uintptr_t)jarg2; 
  if (arg1) (arg1)->count = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1Vec_1u32_1FFI_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_Vec_u32_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_Vec_u32_FFI *) 0 ;
  uintptr_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_Vec_u32_FFI **)&jarg1; 
  result = (uintptr_t) ((arg1)->count);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1Vec_1u32_1FFI_1keys_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_crate_nested_HashID_values_Vec_u32_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_Vec_u32_FFI *) 0 ;
  HashID_FFI **arg2 = (HashID_FFI **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_Vec_u32_FFI **)&jarg1; 
  arg2 = *(HashID_FFI ***)&jarg2; 
  if (arg1) (arg1)->keys = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1Vec_1u32_1FFI_1keys_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_Vec_u32_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_Vec_u32_FFI *) 0 ;
  HashID_FFI **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_Vec_u32_FFI **)&jarg1; 
  result = (HashID_FFI **) ((arg1)->keys);
  *(HashID_FFI ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1Vec_1u32_1FFI_1values_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_crate_nested_HashID_values_Vec_u32_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_Vec_u32_FFI *) 0 ;
  Vec_u32_FFI **arg2 = (Vec_u32_FFI **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_Vec_u32_FFI **)&jarg1; 
  arg2 = *(Vec_u32_FFI ***)&jarg2; 
  if (arg1) (arg1)->values = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1Vec_1u32_1FFI_1values_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_Vec_u32_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_Vec_u32_FFI *) 0 ;
  Vec_u32_FFI **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_Vec_u32_FFI **)&jarg1; 
  result = (Vec_u32_FFI **) ((arg1)->values);
  *(Vec_u32_FFI ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1Vec_1u32_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_Vec_u32_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (std_collections_Map_keys_crate_nested_HashID_values_Vec_u32_FFI *)new std_collections_Map_keys_crate_nested_HashID_values_Vec_u32_FFI();
  *(std_collections_Map_keys_crate_nested_HashID_values_Vec_u32_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1Vec_1u32_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std_collections_Map_keys_crate_nested_HashID_values_Vec_u32_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_Vec_u32_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_Vec_u32_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1std_1collections_1Map_1keys_1u32_1values_1Vec_1u32_1FFI_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *) 0 ;
  uintptr_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_u32_FFI **)&jarg1; 
  arg2 = (uintptr_t)jarg2; 
  if (arg1) (arg1)->count = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1std_1collections_1Map_1keys_1u32_1values_1Vec_1u32_1FFI_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *) 0 ;
  uintptr_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_u32_FFI **)&jarg1; 
  result = (uintptr_t) ((arg1)->count);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1std_1collections_1Map_1keys_1u32_1values_1Vec_1u32_1FFI_1keys_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *) 0 ;
  HashID_FFI **arg2 = (HashID_FFI **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_u32_FFI **)&jarg1; 
  arg2 = *(HashID_FFI ***)&jarg2; 
  if (arg1) (arg1)->keys = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1std_1collections_1Map_1keys_1u32_1values_1Vec_1u32_1FFI_1keys_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *) 0 ;
  HashID_FFI **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_u32_FFI **)&jarg1; 
  result = (HashID_FFI **) ((arg1)->keys);
  *(HashID_FFI ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1std_1collections_1Map_1keys_1u32_1values_1Vec_1u32_1FFI_1values_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *) 0 ;
  std_collections_Map_keys_u32_values_Vec_u32_FFI **arg2 = (std_collections_Map_keys_u32_values_Vec_u32_FFI **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_u32_FFI **)&jarg1; 
  arg2 = *(std_collections_Map_keys_u32_values_Vec_u32_FFI ***)&jarg2; 
  if (arg1) (arg1)->values = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1std_1collections_1Map_1keys_1u32_1values_1Vec_1u32_1FFI_1values_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *) 0 ;
  std_collections_Map_keys_u32_values_Vec_u32_FFI **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_u32_FFI **)&jarg1; 
  result = (std_collections_Map_keys_u32_values_Vec_u32_FFI **) ((arg1)->values);
  *(std_collections_Map_keys_u32_values_Vec_u32_FFI ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1std_1collections_1Map_1keys_1u32_1values_1Vec_1u32_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *)new std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_u32_FFI();
  *(std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_u32_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1std_1collections_1Map_1keys_1u32_1values_1Vec_1u32_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_u32_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1std_1collections_1Map_1keys_1u32_1values_1Vec_1crate_1nested_1HashID_1FFI_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *) 0 ;
  uintptr_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **)&jarg1; 
  arg2 = (uintptr_t)jarg2; 
  if (arg1) (arg1)->count = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1std_1collections_1Map_1keys_1u32_1values_1Vec_1crate_1nested_1HashID_1FFI_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *) 0 ;
  uintptr_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **)&jarg1; 
  result = (uintptr_t) ((arg1)->count);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1std_1collections_1Map_1keys_1u32_1values_1Vec_1crate_1nested_1HashID_1FFI_1keys_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *) 0 ;
  HashID_FFI **arg2 = (HashID_FFI **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **)&jarg1; 
  arg2 = *(HashID_FFI ***)&jarg2; 
  if (arg1) (arg1)->keys = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1std_1collections_1Map_1keys_1u32_1values_1Vec_1crate_1nested_1HashID_1FFI_1keys_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *) 0 ;
  HashID_FFI **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **)&jarg1; 
  result = (HashID_FFI **) ((arg1)->keys);
  *(HashID_FFI ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1std_1collections_1Map_1keys_1u32_1values_1Vec_1crate_1nested_1HashID_1FFI_1values_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *) 0 ;
  std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **arg2 = (std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **)&jarg1; 
  arg2 = *(std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI ***)&jarg2; 
  if (arg1) (arg1)->values = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1std_1collections_1Map_1keys_1u32_1values_1Vec_1crate_1nested_1HashID_1FFI_1values_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *) 0 ;
  std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **)&jarg1; 
  result = (std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **) ((arg1)->values);
  *(std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1std_1collections_1Map_1keys_1u32_1values_1Vec_1crate_1nested_1HashID_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *)new std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI();
  *(std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1std_1collections_1Map_1keys_1u32_1values_1Vec_1crate_1nested_1HashID_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1crate_1nested_1HashID_1FFI_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *) 0 ;
  uintptr_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **)&jarg1; 
  arg2 = (uintptr_t)jarg2; 
  if (arg1) (arg1)->count = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1crate_1nested_1HashID_1FFI_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *) 0 ;
  uintptr_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **)&jarg1; 
  result = (uintptr_t) ((arg1)->count);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1crate_1nested_1HashID_1FFI_1keys_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *) 0 ;
  uint32_t *arg2 = (uint32_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **)&jarg1; 
  arg2 = *(uint32_t **)&jarg2; 
  if (arg1) (arg1)->keys = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1crate_1nested_1HashID_1FFI_1keys_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *) 0 ;
  uint32_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **)&jarg1; 
  result = (uint32_t *) ((arg1)->keys);
  *(uint32_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1crate_1nested_1HashID_1FFI_1values_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *) 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **arg2 = (std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **)&jarg1; 
  arg2 = *(std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI ***)&jarg2; 
  if (arg1) (arg1)->values = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1crate_1nested_1HashID_1FFI_1values_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *) 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **)&jarg1; 
  result = (std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **) ((arg1)->values);
  *(std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1crate_1nested_1HashID_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *)new std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI();
  *(std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1crate_1nested_1HashID_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1crate_1nested_1HashID_1FFI_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *) 0 ;
  uintptr_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **)&jarg1; 
  arg2 = (uintptr_t)jarg2; 
  if (arg1) (arg1)->count = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1crate_1nested_1HashID_1FFI_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *) 0 ;
  uintptr_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **)&jarg1; 
  result = (uintptr_t) ((arg1)->count);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1crate_1nested_1HashID_1FFI_1keys_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *) 0 ;
  HashID_FFI **arg2 = (HashID_FFI **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **)&jarg1; 
  arg2 = *(HashID_FFI ***)&jarg2; 
  if (arg1) (arg1)->keys = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1crate_1nested_1HashID_1FFI_1keys_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *) 0 ;
  HashID_FFI **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **)&jarg1; 
  result = (HashID_FFI **) ((arg1)->keys);
  *(HashID_FFI ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1crate_1nested_1HashID_1FFI_1values_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *) 0 ;
  std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **arg2 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **)&jarg1; 
  arg2 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI ***)&jarg2; 
  if (arg1) (arg1)->values = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1crate_1nested_1HashID_1FFI_1values_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *) 0 ;
  std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **)&jarg1; 
  result = (std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **) ((arg1)->values);
  *(std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1crate_1nested_1HashID_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *)new std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI();
  *(std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1std_1collections_1Map_1keys_1u32_1values_1std_1collections_1Map_1keys_1crate_1nested_1HashID_1values_1crate_1nested_1HashID_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_TestStruct_1FFI_1vec_1u8_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  Vec_u8_FFI *arg2 = (Vec_u8_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  arg2 = *(Vec_u8_FFI **)&jarg2; 
  if (arg1) (arg1)->vec_u8 = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_TestStruct_1FFI_1vec_1u8_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  Vec_u8_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  result = (Vec_u8_FFI *) ((arg1)->vec_u8);
  *(Vec_u8_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_TestStruct_1FFI_1vec_1u32_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  Vec_u32_FFI *arg2 = (Vec_u32_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  arg2 = *(Vec_u32_FFI **)&jarg2; 
  if (arg1) (arg1)->vec_u32 = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_TestStruct_1FFI_1vec_1u32_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  Vec_u32_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  result = (Vec_u32_FFI *) ((arg1)->vec_u32);
  *(Vec_u32_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_TestStruct_1FFI_1vec_1vec_1u32_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  Vec_Vec_u32_FFI *arg2 = (Vec_Vec_u32_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  arg2 = *(Vec_Vec_u32_FFI **)&jarg2; 
  if (arg1) (arg1)->vec_vec_u32 = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_TestStruct_1FFI_1vec_1vec_1u32_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  Vec_Vec_u32_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  result = (Vec_Vec_u32_FFI *) ((arg1)->vec_vec_u32);
  *(Vec_Vec_u32_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_TestStruct_1FFI_1map_1key_1simple_1value_1simple_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  std_collections_Map_keys_u32_values_u32_FFI *arg2 = (std_collections_Map_keys_u32_values_u32_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  arg2 = *(std_collections_Map_keys_u32_values_u32_FFI **)&jarg2; 
  if (arg1) (arg1)->map_key_simple_value_simple = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_TestStruct_1FFI_1map_1key_1simple_1value_1simple_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  std_collections_Map_keys_u32_values_u32_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  result = (std_collections_Map_keys_u32_values_u32_FFI *) ((arg1)->map_key_simple_value_simple);
  *(std_collections_Map_keys_u32_values_u32_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_TestStruct_1FFI_1map_1key_1simple_1value_1complex_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *arg2 = (std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  arg2 = *(std_collections_Map_keys_u32_values_crate_nested_HashID_FFI **)&jarg2; 
  if (arg1) (arg1)->map_key_simple_value_complex = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_TestStruct_1FFI_1map_1key_1simple_1value_1complex_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  result = (std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *) ((arg1)->map_key_simple_value_complex);
  *(std_collections_Map_keys_u32_values_crate_nested_HashID_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_TestStruct_1FFI_1map_1key_1simple_1value_1vec_1simple_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  std_collections_Map_keys_u32_values_Vec_u32_FFI *arg2 = (std_collections_Map_keys_u32_values_Vec_u32_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  arg2 = *(std_collections_Map_keys_u32_values_Vec_u32_FFI **)&jarg2; 
  if (arg1) (arg1)->map_key_simple_value_vec_simple = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_TestStruct_1FFI_1map_1key_1simple_1value_1vec_1simple_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  std_collections_Map_keys_u32_values_Vec_u32_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  result = (std_collections_Map_keys_u32_values_Vec_u32_FFI *) ((arg1)->map_key_simple_value_vec_simple);
  *(std_collections_Map_keys_u32_values_Vec_u32_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_TestStruct_1FFI_1map_1key_1simple_1value_1vec_1complex_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *arg2 = (std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  arg2 = *(std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **)&jarg2; 
  if (arg1) (arg1)->map_key_simple_value_vec_complex = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_TestStruct_1FFI_1map_1key_1simple_1value_1vec_1complex_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  result = (std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *) ((arg1)->map_key_simple_value_vec_complex);
  *(std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_TestStruct_1FFI_1map_1key_1simple_1value_1map_1key_1simple_1value_1simple_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_u32_FFI *arg2 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_u32_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  arg2 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_u32_FFI **)&jarg2; 
  if (arg1) (arg1)->map_key_simple_value_map_key_simple_value_simple = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_TestStruct_1FFI_1map_1key_1simple_1value_1map_1key_1simple_1value_1simple_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_u32_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  result = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_u32_FFI *) ((arg1)->map_key_simple_value_map_key_simple_value_simple);
  *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_u32_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_TestStruct_1FFI_1map_1key_1simple_1value_1map_1key_1simple_1value_1complex_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *arg2 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  arg2 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_crate_nested_HashID_FFI **)&jarg2; 
  if (arg1) (arg1)->map_key_simple_value_map_key_simple_value_complex = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_TestStruct_1FFI_1map_1key_1simple_1value_1map_1key_1simple_1value_1complex_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  result = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *) ((arg1)->map_key_simple_value_map_key_simple_value_complex);
  *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_crate_nested_HashID_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_TestStruct_1FFI_1map_1key_1simple_1value_1map_1key_1simple_1value_1vec_1simple_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *arg2 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  arg2 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_u32_FFI **)&jarg2; 
  if (arg1) (arg1)->map_key_simple_value_map_key_simple_value_vec_simple = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_TestStruct_1FFI_1map_1key_1simple_1value_1map_1key_1simple_1value_1vec_1simple_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  result = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *) ((arg1)->map_key_simple_value_map_key_simple_value_vec_simple);
  *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_u32_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_TestStruct_1FFI_1map_1key_1simple_1value_1map_1key_1simple_1value_1vec_1complex_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *arg2 = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  arg2 = *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **)&jarg2; 
  if (arg1) (arg1)->map_key_simple_value_map_key_simple_value_vec_complex = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_TestStruct_1FFI_1map_1key_1simple_1value_1map_1key_1simple_1value_1vec_1complex_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  result = (std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *) ((arg1)->map_key_simple_value_map_key_simple_value_vec_complex);
  *(std_collections_Map_keys_u32_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_TestStruct_1FFI_1map_1key_1complex_1value_1simple_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_u32_FFI *arg2 = (std_collections_Map_keys_crate_nested_HashID_values_u32_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  arg2 = *(std_collections_Map_keys_crate_nested_HashID_values_u32_FFI **)&jarg2; 
  if (arg1) (arg1)->map_key_complex_value_simple = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_TestStruct_1FFI_1map_1key_1complex_1value_1simple_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_u32_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  result = (std_collections_Map_keys_crate_nested_HashID_values_u32_FFI *) ((arg1)->map_key_complex_value_simple);
  *(std_collections_Map_keys_crate_nested_HashID_values_u32_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_TestStruct_1FFI_1map_1key_1complex_1value_1complex_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *arg2 = (std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  arg2 = *(std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **)&jarg2; 
  if (arg1) (arg1)->map_key_complex_value_complex = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_TestStruct_1FFI_1map_1key_1complex_1value_1complex_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  result = (std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *) ((arg1)->map_key_complex_value_complex);
  *(std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_TestStruct_1FFI_1map_1key_1complex_1value_1vec_1simple_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_Vec_u32_FFI *arg2 = (std_collections_Map_keys_crate_nested_HashID_values_Vec_u32_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  arg2 = *(std_collections_Map_keys_crate_nested_HashID_values_Vec_u32_FFI **)&jarg2; 
  if (arg1) (arg1)->map_key_complex_value_vec_simple = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_TestStruct_1FFI_1map_1key_1complex_1value_1vec_1simple_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_Vec_u32_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  result = (std_collections_Map_keys_crate_nested_HashID_values_Vec_u32_FFI *) ((arg1)->map_key_complex_value_vec_simple);
  *(std_collections_Map_keys_crate_nested_HashID_values_Vec_u32_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_TestStruct_1FFI_1map_1key_1complex_1value_1vec_1complex_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_Vec_crate_nested_HashID_FFI *arg2 = (std_collections_Map_keys_crate_nested_HashID_values_Vec_crate_nested_HashID_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  arg2 = *(std_collections_Map_keys_crate_nested_HashID_values_Vec_crate_nested_HashID_FFI **)&jarg2; 
  if (arg1) (arg1)->map_key_complex_value_vec_complex = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_TestStruct_1FFI_1map_1key_1complex_1value_1vec_1complex_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_Vec_crate_nested_HashID_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  result = (std_collections_Map_keys_crate_nested_HashID_values_Vec_crate_nested_HashID_FFI *) ((arg1)->map_key_complex_value_vec_complex);
  *(std_collections_Map_keys_crate_nested_HashID_values_Vec_crate_nested_HashID_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_TestStruct_1FFI_1map_1key_1complex_1value_1map_1key_1simple_1value_1vec_1simple_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *arg2 = (std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  arg2 = *(std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_u32_FFI **)&jarg2; 
  if (arg1) (arg1)->map_key_complex_value_map_key_simple_value_vec_simple = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_TestStruct_1FFI_1map_1key_1complex_1value_1map_1key_1simple_1value_1vec_1simple_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  result = (std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_u32_FFI *) ((arg1)->map_key_complex_value_map_key_simple_value_vec_simple);
  *(std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_u32_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_TestStruct_1FFI_1map_1key_1complex_1value_1map_1key_1simple_1value_1vec_1complex_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *arg2 = (std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  arg2 = *(std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **)&jarg2; 
  if (arg1) (arg1)->map_key_complex_value_map_key_simple_value_vec_complex = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_TestStruct_1FFI_1map_1key_1complex_1value_1map_1key_1simple_1value_1vec_1complex_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  result = (std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI *) ((arg1)->map_key_complex_value_map_key_simple_value_vec_complex);
  *(std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_Vec_crate_nested_HashID_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_TestStruct_1FFI_1map_1key_1complex_1value_1map_1key_1simple_1value_1map_1key_1complex_1value_1complex_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *arg2 = (std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  arg2 = *(std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **)&jarg2; 
  if (arg1) (arg1)->map_key_complex_value_map_key_simple_value_map_key_complex_value_complex = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_TestStruct_1FFI_1map_1key_1complex_1value_1map_1key_1simple_1value_1map_1key_1complex_1value_1complex_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  result = (std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI *) ((arg1)->map_key_complex_value_map_key_simple_value_map_key_complex_value_complex);
  *(std_collections_Map_keys_crate_nested_HashID_values_std_collections_Map_keys_u32_values_std_collections_Map_keys_crate_nested_HashID_values_crate_nested_HashID_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1TestStruct_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  TestStruct_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (TestStruct_FFI *)new TestStruct_FFI();
  *(TestStruct_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1TestStruct_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_Vec_1Vec_1crate_1nested_1HashID_1FFI_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  Vec_Vec_crate_nested_HashID_FFI *arg1 = (Vec_Vec_crate_nested_HashID_FFI *) 0 ;
  uintptr_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vec_Vec_crate_nested_HashID_FFI **)&jarg1; 
  arg2 = (uintptr_t)jarg2; 
  if (arg1) (arg1)->count = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_Vec_1Vec_1crate_1nested_1HashID_1FFI_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Vec_Vec_crate_nested_HashID_FFI *arg1 = (Vec_Vec_crate_nested_HashID_FFI *) 0 ;
  uintptr_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vec_Vec_crate_nested_HashID_FFI **)&jarg1; 
  result = (uintptr_t) ((arg1)->count);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_Vec_1Vec_1crate_1nested_1HashID_1FFI_1values_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  Vec_Vec_crate_nested_HashID_FFI *arg1 = (Vec_Vec_crate_nested_HashID_FFI *) 0 ;
  Vec_crate_nested_HashID_FFI **arg2 = (Vec_crate_nested_HashID_FFI **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vec_Vec_crate_nested_HashID_FFI **)&jarg1; 
  arg2 = *(Vec_crate_nested_HashID_FFI ***)&jarg2; 
  if (arg1) (arg1)->values = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_Vec_1Vec_1crate_1nested_1HashID_1FFI_1values_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Vec_Vec_crate_nested_HashID_FFI *arg1 = (Vec_Vec_crate_nested_HashID_FFI *) 0 ;
  Vec_crate_nested_HashID_FFI **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vec_Vec_crate_nested_HashID_FFI **)&jarg1; 
  result = (Vec_crate_nested_HashID_FFI **) ((arg1)->values);
  *(Vec_crate_nested_HashID_FFI ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1Vec_1Vec_1crate_1nested_1HashID_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Vec_Vec_crate_nested_HashID_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (Vec_Vec_crate_nested_HashID_FFI *)new Vec_Vec_crate_nested_HashID_FFI();
  *(Vec_Vec_crate_nested_HashID_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1Vec_1Vec_1crate_1nested_1HashID_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Vec_Vec_crate_nested_HashID_FFI *arg1 = (Vec_Vec_crate_nested_HashID_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Vec_Vec_crate_nested_HashID_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_ArrayOfArraysOfHashes_1FFI_1_10_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  ArrayOfArraysOfHashes_FFI *arg1 = (ArrayOfArraysOfHashes_FFI *) 0 ;
  Vec_Vec_crate_nested_HashID_FFI *arg2 = (Vec_Vec_crate_nested_HashID_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(ArrayOfArraysOfHashes_FFI **)&jarg1; 
  arg2 = *(Vec_Vec_crate_nested_HashID_FFI **)&jarg2; 
  if (arg1) (arg1)->_0 = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_ArrayOfArraysOfHashes_1FFI_1_10_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ArrayOfArraysOfHashes_FFI *arg1 = (ArrayOfArraysOfHashes_FFI *) 0 ;
  Vec_Vec_crate_nested_HashID_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ArrayOfArraysOfHashes_FFI **)&jarg1; 
  result = (Vec_Vec_crate_nested_HashID_FFI *) ((arg1)->_0);
  *(Vec_Vec_crate_nested_HashID_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1ArrayOfArraysOfHashes_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ArrayOfArraysOfHashes_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ArrayOfArraysOfHashes_FFI *)new ArrayOfArraysOfHashes_FFI();
  *(ArrayOfArraysOfHashes_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1ArrayOfArraysOfHashes_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ArrayOfArraysOfHashes_FFI *arg1 = (ArrayOfArraysOfHashes_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ArrayOfArraysOfHashes_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_Hash160_1FFI_1_10_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  Hash160_FFI *arg1 = (Hash160_FFI *) 0 ;
  uint8_t (*arg2)[20] = (uint8_t (*)[20]) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Hash160_FFI **)&jarg1; 
  arg2 = *(uint8_t (**)[20])&jarg2; 
  if (arg1) (arg1)->_0 = (uint8_t (*)[20])arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_Hash160_1FFI_1_10_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Hash160_FFI *arg1 = (Hash160_FFI *) 0 ;
  uint8_t (*result)[20] = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Hash160_FFI **)&jarg1; 
  result = (uint8_t (*)[20]) ((arg1)->_0);
  *(uint8_t (**)[20])&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1Hash160_1FFI(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Hash160_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (Hash160_FFI *)new Hash160_FFI();
  *(Hash160_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1Hash160_1FFI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Hash160_FFI *arg1 = (Hash160_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Hash160_FFI **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_rootStructFFIDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  RootStruct_FFI *arg1 = (RootStruct_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RootStruct_FFI **)&jarg1; 
  RootStruct_FFI_destroy(arg1);
}


SWIGEXPORT jstring JNICALL Java_org_dash_sdk_exampleJNI_ffiAddressWithScriptPubkey(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jstring jresult = 0 ;
  Vec_u8_FFI *arg1 = (Vec_u8_FFI *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Vec_u8_FFI **)&jarg1; 
  result = (char *)ffi_address_with_script_pubkey(arg1);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_dash_sdk_exampleJNI_ffiGetChainHashesByMap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  std_collections_Map_keys_crate_chain_common_chain_type_ChainType_values_crate_nested_HashID_FFI *arg1 = (std_collections_Map_keys_crate_chain_common_chain_type_ChainType_values_crate_nested_HashID_FFI *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std_collections_Map_keys_crate_chain_common_chain_type_ChainType_values_crate_nested_HashID_FFI **)&jarg1; 
  result = (char *)ffi_get_chain_hashes_by_map(arg1);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_dash_sdk_exampleJNI_ffiGetChainTypeString(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ChainType_FFI *arg1 = (ChainType_FFI *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ChainType_FFI **)&jarg1; 
  result = (char *)ffi_get_chain_type_string(arg1);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_ffiGetChainSettings(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ChainType_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ChainType_FFI *)ffi_get_chain_settings();
  *(ChainType_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_chainTypeFFIDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  ChainType_FFI *arg1 = (ChainType_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ChainType_FFI **)&jarg1; 
  ChainType_FFI_destroy(arg1);
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_chainTypeAsIHaveChainSettingsTraitObject(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  ChainType *arg1 = (ChainType *) 0 ;
  IHaveChainSettings_TraitObject result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ChainType **)&jarg1; 
  result = ChainType_as_IHaveChainSettings_TraitObject((ChainType const *)arg1);
  *(IHaveChainSettings_TraitObject **)&jresult = new IHaveChainSettings_TraitObject((const IHaveChainSettings_TraitObject &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_chainTypeAsIHaveChainSettingsTraitObjectDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  IHaveChainSettings_TraitObject arg1 ;
  IHaveChainSettings_TraitObject *argp1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  argp1 = *(IHaveChainSettings_TraitObject **)&jarg1; 
  if (!argp1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null IHaveChainSettings_TraitObject");
    return ;
  }
  arg1 = *argp1; 
  ChainType_as_IHaveChainSettings_TraitObject_destroy(arg1);
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_devnetTypeFFIDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  enum DevnetType_FFI *arg1 = (enum DevnetType_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(enum DevnetType_FFI **)&jarg1; 
  DevnetType_FFI_destroy(arg1);
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_devnetTypeAsIHaveChainSettingsTraitObject(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  DevnetType *arg1 = (DevnetType *) 0 ;
  IHaveChainSettings_TraitObject result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(DevnetType **)&jarg1; 
  result = DevnetType_as_IHaveChainSettings_TraitObject((DevnetType const *)arg1);
  *(IHaveChainSettings_TraitObject **)&jresult = new IHaveChainSettings_TraitObject((const IHaveChainSettings_TraitObject &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_devnetTypeAsIHaveChainSettingsTraitObjectDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  IHaveChainSettings_TraitObject arg1 ;
  IHaveChainSettings_TraitObject *argp1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  argp1 = *(IHaveChainSettings_TraitObject **)&jarg1; 
  if (!argp1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null IHaveChainSettings_TraitObject");
    return ;
  }
  arg1 = *argp1; 
  DevnetType_as_IHaveChainSettings_TraitObject_destroy(arg1);
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_dataContractNotPresentErrorFFIDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  DataContractNotPresentError_FFI *arg1 = (DataContractNotPresentError_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DataContractNotPresentError_FFI **)&jarg1; 
  DataContractNotPresentError_FFI_destroy(arg1);
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_mapOfVecHashesFFIDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  MapOfVecHashes_FFI *arg1 = (MapOfVecHashes_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MapOfVecHashes_FFI **)&jarg1; 
  MapOfVecHashes_FFI_destroy(arg1);
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_timestampMillisFFIDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  TimestampMillis_FFI *arg1 = (TimestampMillis_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TimestampMillis_FFI **)&jarg1; 
  TimestampMillis_FFI_destroy(arg1);
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_identityPublicKeyFFIDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  IdentityPublicKey_FFI *arg1 = (IdentityPublicKey_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IdentityPublicKey_FFI **)&jarg1; 
  IdentityPublicKey_FFI_destroy(arg1);
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_mapOfHashesFFIDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  MapOfHashes_FFI *arg1 = (MapOfHashes_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MapOfHashes_FFI **)&jarg1; 
  MapOfHashes_FFI_destroy(arg1);
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_hashIDFFIDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  HashID_FFI *arg1 = (HashID_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(HashID_FFI **)&jarg1; 
  HashID_FFI_destroy(arg1);
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_protocolErrorFFIDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  ProtocolError_FFI *arg1 = (ProtocolError_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ProtocolError_FFI **)&jarg1; 
  ProtocolError_FFI_destroy(arg1);
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_usedStructFFIDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  UsedStruct_FFI *arg1 = (UsedStruct_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UsedStruct_FFI **)&jarg1; 
  UsedStruct_FFI_destroy(arg1);
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_keyIDFFIDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  KeyID_FFI *arg1 = (KeyID_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(KeyID_FFI **)&jarg1; 
  KeyID_FFI_destroy(arg1);
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_identityFFIDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Identity_FFI *arg1 = (Identity_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Identity_FFI **)&jarg1; 
  Identity_FFI_destroy(arg1);
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_identityPublicKeyV0FFIDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  IdentityPublicKeyV0_FFI *arg1 = (IdentityPublicKeyV0_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IdentityPublicKeyV0_FFI **)&jarg1; 
  IdentityPublicKeyV0_FFI_destroy(arg1);
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_ffiFindHashByU32(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  uint32_t arg1 ;
  std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *arg2 = (std_collections_Map_keys_u32_values_crate_nested_HashID_FFI *) 0 ;
  HashID_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = (uint32_t)jarg1; 
  arg2 = *(std_collections_Map_keys_u32_values_crate_nested_HashID_FFI **)&jarg2; 
  result = (HashID_FFI *)ffi_find_hash_by_u32(arg1,arg2);
  *(HashID_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_identifierBytes32FFIDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  IdentifierBytes32_FFI *arg1 = (IdentifierBytes32_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IdentifierBytes32_FFI **)&jarg1; 
  IdentifierBytes32_FFI_destroy(arg1);
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_securityLevelFFIDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  enum SecurityLevel_FFI *arg1 = (enum SecurityLevel_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(enum SecurityLevel_FFI **)&jarg1; 
  SecurityLevel_FFI_destroy(arg1);
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_myIdentityFactoryFFIDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  MyIdentityFactory_FFI *arg1 = (MyIdentityFactory_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MyIdentityFactory_FFI **)&jarg1; 
  MyIdentityFactory_FFI_destroy(arg1);
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_myIdentityFactoryAsIdentityFactoryTraitObject(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  MyIdentityFactory *arg1 = (MyIdentityFactory *) 0 ;
  IdentityFactory_TraitObject result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(MyIdentityFactory **)&jarg1; 
  result = MyIdentityFactory_as_IdentityFactory_TraitObject((MyIdentityFactory const *)arg1);
  *(IdentityFactory_TraitObject **)&jresult = new IdentityFactory_TraitObject((const IdentityFactory_TraitObject &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_myIdentityFactoryAsIdentityFactoryTraitObjectDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  IdentityFactory_TraitObject arg1 ;
  IdentityFactory_TraitObject *argp1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  argp1 = *(IdentityFactory_TraitObject **)&jarg1; 
  if (!argp1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null IdentityFactory_TraitObject");
    return ;
  }
  arg1 = *argp1; 
  MyIdentityFactory_as_IdentityFactory_TraitObject_destroy(arg1);
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_unnamedPairFFIDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  UnnamedPair_FFI *arg1 = (UnnamedPair_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UnnamedPair_FFI **)&jarg1; 
  UnnamedPair_FFI_destroy(arg1);
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_keyTypeFFIDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  enum KeyType_FFI *arg1 = (enum KeyType_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(enum KeyType_FFI **)&jarg1; 
  KeyType_FFI_destroy(arg1);
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_revisionFFIDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Revision_FFI *arg1 = (Revision_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Revision_FFI **)&jarg1; 
  Revision_FFI_destroy(arg1);
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_simpleDataFFIDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  SimpleData_FFI *arg1 = (SimpleData_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SimpleData_FFI **)&jarg1; 
  SimpleData_FFI_destroy(arg1);
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_binaryDataFFIDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  BinaryData_FFI *arg1 = (BinaryData_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(BinaryData_FFI **)&jarg1; 
  BinaryData_FFI_destroy(arg1);
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_ffiGetIdentity2(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Identifier_FFI *arg1 = (Identifier_FFI *) 0 ;
  Identity_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Identifier_FFI **)&jarg1; 
  result = (Identity_FFI *)ffi_get_identity2(arg1);
  *(Identity_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_usedKeyMatrixFFIDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  UsedKeyMatrix_FFI *arg1 = (UsedKeyMatrix_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UsedKeyMatrix_FFI **)&jarg1; 
  UsedKeyMatrix_FFI_destroy(arg1);
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_testEnumFFIDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  TestEnum_FFI *arg1 = (TestEnum_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestEnum_FFI **)&jarg1; 
  TestEnum_FFI_destroy(arg1);
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_ffiGetAnIdentity(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Identity_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (Identity_FFI *)ffi_get_an_identity();
  *(Identity_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_testStructFFIDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  TestStruct_FFI *arg1 = (TestStruct_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestStruct_FFI **)&jarg1; 
  TestStruct_FFI_destroy(arg1);
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_identifierFFIDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Identifier_FFI *arg1 = (Identifier_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Identifier_FFI **)&jarg1; 
  Identifier_FFI_destroy(arg1);
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_arrayOfArraysOfHashesFFIDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  ArrayOfArraysOfHashes_FFI *arg1 = (ArrayOfArraysOfHashes_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ArrayOfArraysOfHashes_FFI **)&jarg1; 
  ArrayOfArraysOfHashes_FFI_destroy(arg1);
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_ffiGetIdentityFactory(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  MyIdentityFactory_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (MyIdentityFactory_FFI *)ffi_get_identity_factory();
  *(MyIdentityFactory_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_contractBoundsFFIDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  ContractBounds_FFI *arg1 = (ContractBounds_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ContractBounds_FFI **)&jarg1; 
  ContractBounds_FFI_destroy(arg1);
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_identityV0FFIDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  IdentityV0_FFI *arg1 = (IdentityV0_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IdentityV0_FFI **)&jarg1; 
  IdentityV0_FFI_destroy(arg1);
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_hash160FFIDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  Hash160_FFI *arg1 = (Hash160_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Hash160_FFI **)&jarg1; 
  Hash160_FFI_destroy(arg1);
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_purposeFFIDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  enum Purpose_FFI *arg1 = (enum Purpose_FFI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(enum Purpose_FFI **)&jarg1; 
  Purpose_FFI_destroy(arg1);
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1IHaveChainSettings(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  IHaveChainSettings_TraitObject *arg1 = 0 ;
  IHaveChainSettings *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IHaveChainSettings_TraitObject **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "IHaveChainSettings_TraitObject const & reference is null");
    return 0;
  } 
  result = (IHaveChainSettings *)new IHaveChainSettings((IHaveChainSettings_TraitObject const &)*arg1);
  *(IHaveChainSettings **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_dash_sdk_exampleJNI_IHaveChainSettings_1name(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  IHaveChainSettings *arg1 = (IHaveChainSettings *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IHaveChainSettings **)&jarg1; 
  result = (char *)((IHaveChainSettings const *)arg1)->name();
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_IHaveChainSettings_1genesisHash(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  IHaveChainSettings *arg1 = (IHaveChainSettings *) 0 ;
  HashID_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IHaveChainSettings **)&jarg1; 
  result = (HashID_FFI *)((IHaveChainSettings const *)arg1)->genesis_hash();
  *(HashID_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_IHaveChainSettings_1genesisHeight(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  IHaveChainSettings *arg1 = (IHaveChainSettings *) 0 ;
  uint32_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IHaveChainSettings **)&jarg1; 
  result = (uint32_t)((IHaveChainSettings const *)arg1)->genesis_height();
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_dash_sdk_exampleJNI_IHaveChainSettings_1hasGenesisHash(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  IHaveChainSettings *arg1 = (IHaveChainSettings *) 0 ;
  HashID_FFI *arg2 = (HashID_FFI *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(IHaveChainSettings **)&jarg1; 
  arg2 = *(HashID_FFI **)&jarg2; 
  result = (bool)((IHaveChainSettings const *)arg1)->has_genesis_hash(arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_IHaveChainSettings_1getHashByHash(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  IHaveChainSettings *arg1 = (IHaveChainSettings *) 0 ;
  HashID_FFI *arg2 = (HashID_FFI *) 0 ;
  HashID_FFI *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(IHaveChainSettings **)&jarg1; 
  arg2 = *(HashID_FFI **)&jarg2; 
  result = (HashID_FFI *)((IHaveChainSettings const *)arg1)->get_hash_by_hash(arg2);
  *(HashID_FFI **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_dash_sdk_exampleJNI_IHaveChainSettings_1shouldProcessLlmqOfType(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jboolean jresult = 0 ;
  IHaveChainSettings *arg1 = (IHaveChainSettings *) 0 ;
  uint16_t arg2 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IHaveChainSettings **)&jarg1; 
  arg2 = (uint16_t)jarg2; 
  result = (bool)((IHaveChainSettings const *)arg1)->should_process_llmq_of_type(arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1IHaveChainSettings(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  IHaveChainSettings *arg1 = (IHaveChainSettings *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(IHaveChainSettings **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_new_1IdentityFactory(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  IdentityFactory_TraitObject *arg1 = (IdentityFactory_TraitObject *) 0 ;
  IdentityFactory *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IdentityFactory_TraitObject **)&jarg1; 
  result = (IdentityFactory *)new IdentityFactory(arg1);
  *(IdentityFactory **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dash_sdk_exampleJNI_IdentityFactory_1getIdentity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  IdentityFactory *arg1 = (IdentityFactory *) 0 ;
  Identifier_FFI *arg2 = (Identifier_FFI *) 0 ;
  Identity_FFI result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(IdentityFactory **)&jarg1; 
  arg2 = *(Identifier_FFI **)&jarg2; 
  result = (arg1)->getIdentity(arg2);
  *(Identity_FFI **)&jresult = new Identity_FFI((const Identity_FFI &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dash_sdk_exampleJNI_delete_1IdentityFactory(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  IdentityFactory *arg1 = (IdentityFactory *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(IdentityFactory **)&jarg1; 
  delete arg1;
}


#ifdef __cplusplus
}
#endif

